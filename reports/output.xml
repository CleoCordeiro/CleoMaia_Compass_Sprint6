<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.4 on win32)" generated="20220630 17:12:04.527" rpa="false" schemaversion="3">
<suite id="s1" name="02 Usuarios Tests" source="C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\tests\02_usuarios_tests.robot">
<kw name="Criar Sessao" library="common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${BASE_URI}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220630 17:12:05.256" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220630 17:12:05.256" endtime="20220630 17:12:05.256"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.255" endtime="20220630 17:12:05.256"/>
</kw>
<test id="s1-t1" name="Cenario: Listar Todos Os Usuarios Cadastrados" line="12">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.258" level="INFO">${nome} = Michael Lopez</msg>
<status status="PASS" starttime="20220630 17:12:05.257" endtime="20220630 17:12:05.258"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.258" level="INFO">${email} = jtrevino@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.258" endtime="20220630 17:12:05.258"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.258" level="INFO">${word} = enough</msg>
<status status="PASS" starttime="20220630 17:12:05.258" endtime="20220630 17:12:05.258"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.259" level="INFO">${email} = enoughjtrevino@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.258" endtime="20220630 17:12:05.259"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.259" level="INFO">${senha} = x)65uKsizj</msg>
<status status="PASS" starttime="20220630 17:12:05.259" endtime="20220630 17:12:05.259"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.259" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.259" endtime="20220630 17:12:05.259"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.260" level="INFO">&amp;{usuario} = { nome=Michael Lopez | email=enoughjtrevino@example.com | password=x)65uKsizj | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.259" endtime="20220630 17:12:05.260"/>
</kw>
<msg timestamp="20220630 17:12:05.260" level="INFO">${usuario} = {'nome': 'Michael Lopez', 'email': 'enoughjtrevino@example.com', 'password': 'x)65uKsizj', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.257" endtime="20220630 17:12:05.260"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.261" endtime="20220630 17:12:05.261"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.287" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '116', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Michael Lopez", "email": "enoughjtrevino@example.com", "password": "x)65uKsizj", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.287" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '433d0473-5e16-418e-b038-ebf920794fa0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "KwLgdFTlpjU2OF2W"
} 
 </msg>
<msg timestamp="20220630 17:12:05.287" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.261" endtime="20220630 17:12:05.287"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.288" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.287" endtime="20220630 17:12:05.288"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.289" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'KwLgdFTlpjU2OF2W'}</msg>
<status status="PASS" starttime="20220630 17:12:05.288" endtime="20220630 17:12:05.289"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.260" endtime="20220630 17:12:05.289"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.289" endtime="20220630 17:12:05.290"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.289" endtime="20220630 17:12:05.290"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.291" endtime="20220630 17:12:05.291"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.290" endtime="20220630 17:12:05.291"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.292" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.291" endtime="20220630 17:12:05.292"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.292" endtime="20220630 17:12:05.292"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.257" endtime="20220630 17:12:05.293"/>
</kw>
<kw name="Get Endpoint &quot;/usuarios&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.326" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220630 17:12:05.326" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e0b77106-bea3-4998-a6e6-c1641f040613', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '635771', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 2852,
    "usuarios": [
        {
            "nome": "Danny Young",
            "email": "hardsnowjessica@example.net",
            "password": "K&amp;72JQKnb!",
            "administrador": "true",
            "_id": "01PzJKKEuex0ZjVb"
        },
        {
            "nome": "Jon Price",
            "email": "occurbrandontownsend@example.org",
            "password": "4q7NMkzo%r",
            "administrador": "true",
            "_id": "02Jn9WKt9sFkW42u"
        },
        {
            "nome": "Timothy Bruce",
            "email": "lowens@example.com",
            "password": "$Q1e(IwExJ",
            "administrador": "false",
            "_id": "02nOKpibBBPhB2GH"
        },
        {
            "nome": "Justin Duke",
            "email": "catchismith@example.com",
            "password": "%2Rtoyn*YA",
            "administrador": "false",
            "_id": "03TvH3Vy0zOONeZu"
        },
        {
            "nome": "Abigail Salazar",
            "email": "outjeffrey90@example.net",
            "password": "x#_4JYhNk*",
            "administrador": "true",
            "_id": "049gUg1YnBUuxSRn"
        },
        {
            "nome": "Paul Martinez",
            "email": "growmary43@example.org",
            "password": "@)56D1mZ8k",
            "administrador": "true",
            "_id": "06eNd03pK2Qvql3A"
        },
        {
            "nome": "Cameron Hodge",
            "email": "causelaurenvilla@example.org",
            "password": "Q86Vn2Peb_",
            "administrador": "true",
            "_id": "06uViKKZ4RGaSf26"
        },
        {
            "nome": "Anne Riley",
            "email": "monthtgarcia@example.com",
            "password": "VBwg5Xp##B",
            "administrador": "true",
            "_id": "075HjU7bsOCtLRaP"
        },
        {
            "nome": "Daniel Lynn",
            "email": "qcarter@example.net",
            "password": "z$P5N*tssD",
            "administrador": "true",
            "_id": "07ugyqqb8CuCUqtA"
        },
        {
            "nome": "Melissa Cook MD",
            "email": "sendballlori@example.net",
            "password": "E!4kKk0cqy",
            "administrador": "false",
            "_id": "07xVCDV80s4BGfZY"
        },
        {
            "nome": "Nicholas Brown",
            "email": "technologyksanchez@example.net",
            "password": "^3sBNspvDu",
            "administrador": "false",
            "_id": "08RfaOMyXfauOqoS"
        },
        {
            "nome": "Amy Ayala",
            "email": "blackchristine@example.org",
            "password": "qv6$O0+wP&amp;",
            "administrador": "false",
            "_id": "08VbloP2ksV5nWDT"
        },
        {
            "nome": "James Williams",
            "email": "notxguerrero@example.net",
            "password": "@hRu17KoTp",
            "administrador": "true",
            "_id": "09g5WYy8jbzxrPl3"
        },
        {
            "nome": "Kathleen Webb",
            "email": "healthscottrichardson@example.com",
            "password": "!NzITeP)n3",
            "administrador": "true",
            "_id": "0AIZ6wWrSzCHyOrl"
        },
        {
            "nome": "Johnathan Wood",
            "email": "eveningkristinroth@example.com",
            "password": "L0KXcRs$+q",
            "administrador": "true",
            "_id": "0BCZDzp4CawlYUhJ"
        },
        {
            "nome": "Zachary Gallagher",
            "email": "costjared20@example.org",
            "password": "Os35Vbvj4@",
            "administrador": "true",
            "_id": "0BxorwTrl8E5SfNn"
        },
        {
            "nome": "Elizabeth Sanchez",
            "email": "emily39@example.com",
            "password": "$gAon3Nf5i",
            "administrador": "false",
            "_id": "0DKjKENYHU0cGqVW"
        },
        {
            "nome": "Kelsey Jackson",
            "email": "costlunalouis@example.org",
            "password": "&amp;(g8iYuCO5",
            "administrador": "true",
            "_id": "0EZfwjg2ib4GGGEC"
        },
        {
            "nome": "Stephen Smith",
            "email": "receivejoshuahughes@example.com",
            "password": "DF80GZbp(g",
            "administrador": "false",
            "_id": "0EjRyY78b8laLPaz"
        },
        {
            "nome": "Jesse Randolph",
            "email": "john38@example.com",
            "password": "(@04q(nu2Z",
            "administrador": "true",
            "_id": "0HJR2mnfPjOIfbBX"
        },
        {
            "nome": "Michael Hunter",
            "email": "attentionhreyes@example.org",
            "password": "q4@(4tJoG@",
            "administrador": "false",
            "_id": "0HdIPpBH2CA9lFup"
        },
        {
            "nome": "Mark Woods",
            "email": "institutionmanuel74@example.net",
            "password": "F(@k1AelWc",
            "administrador": "true",
            "_id": "0I7kRcVmZmk44NKp"
        },
        {
            "nome": "Corey Jones",
            "email": "edgeamoore@example.net",
            "password": "iqP(hvEk^8",
            "administrador": "false",
            "_id": "0MLnhXHmiha8c7Rf"
        },
        {
            "nome": "Melissa Taylor",
            "email": "windgeorge78@example.com",
            "password": "qNcw7Uec)1",
            "administrador": "true",
            "_id": "0OaefB8OUP7hbGI3"
        },
        {
            "nome": "Rebecca Potts",
            "email": "sciencedavid06@example.net",
            "password": "q1%S2N)w)f",
            "administrador": "false",
            "_id": "0P9s3Qz3XWjwwlir"
        },
        {
            "nome": "Dennis Campos",
            "email": "dennis79@example.net",
            "password": "jf3IjiWA^!",
            "administrador": "true",
            "_id": "0PRk4qZzrmzRwHPH"
        },
        {
            "nome": "George Miller",
            "email": "brownmichael@example.com",
            "password": "*)6SYll0+3",
            "administrador": "true",
            "_id": "0RFCJDebA4d6gkyE"
        },
        {
            "nome": "Taylor Collins",
            "email": "james03@example.net",
            "password": "oj_n84Uu_j",
            "administrador": "true",
            "_id": "0SVFb81oVP649Wfx"
        },
        {
            "nome": "Chase Howard",
            "email": "sufferhollowayjessica@example.com",
            "password": "(Lx5SEqdIw",
            "administrador": "true",
            "_id": "0TIh1P895d5zYRBb"
        },
        {
            "nome": "Mary Vance",
            "email": "likelyhadkins@example.net",
            "password": "JdZQfQ0b@7",
            "administrador": "true",
            "_id": "0TjA2OCctRABTuTk"
        },
        {
            "nome": "Deborah Wu",
            "email": "storesydney06@example.com",
            "password": "9liTZVja%z",
            "administrador": "true",
            "_id": "0ZELIJDBT8xptGZN"
        },
        {
            "nome": "Margaret Estrada",
            "email": "jeromeholland@example.net",
            "password": "@DYi1AlWa6",
            "administrador": "false",
            "_id": "0bA5LbA3QRV5tpUT"
        },
        {
            "nome": "Abigail Thomas",
            "email": "fathernicolefarmer@example.org",
            "password": "a$81Zlfm((",
            "administrador": "false",
            "_id": "0bbafDKRd3B9dbTu"
        },
        {
            "nome": "Manuel Williams",
            "email": "phall@example.org",
            "password": ")39Q7enaUR",
            "administrador": "true",
            "_id": "0cn3tJu9sLCSnsKU"
        },
        {
            "nome": "Katherine Reid",
            "email": "monthhjames@example.net",
            "password": ")7VmpnqtOP",
            "administrador": "true",
            "_id": "0eZzmkngX2eICRLe"
        },
        {
            "nome": "Ryan Smith",
            "email": "deanmcbride@example.com",
            "password": ")uATJnJ*J0",
            "administrador": "true",
            "_id": "0eq2V1vAqiucdUdg"
        },
        {
            "nome": "Sheryl Miller",
            "email": "cardmelissa97@example.com",
            "password": "a6)hw4Ki*%",
            "administrador": "true",
            "_id": "0euMElmKPUKDxoxP"
        },
        {
            "nome": "Kimberly Mcdowell",
            "email": "ourjacobsharp@example.org",
            "password": ")M9i^MRs&amp;9",
            "administrador": "true",
            "_id": "0gVG3BQVjbNbsVZl"
        },
        {
            "nome": "Kathleen Johnston",
            "email": "againgwilliams@example.org",
            "password": "S73uBoJt&amp;h",
            "administrador": "true",
            "_id": "0lgxFj4CFc0zblsi"
        },
        {
            "nome": "Aaron Ortiz",
            "email": "firelisa68@example.org",
            "password": ")G&amp;Dhfpt2w",
            "administrador": "true",
            "_id": "0n42BoxejUMe0qR6"
        },
        {
            "nome": "Jeffrey Lucas",
            "email": "pointsandersruth@example.com",
            "password": "OR8Fzex9$3",
            "administrador": "true",
            "_id": "0ptueg1jasgyD7QZ"
        },
        {
            "nome": "Mary Robinson",
            "email": "courtneygibson@example.net",
            "password": "!6TG2Op75u",
            "administrador": "true",
            "_id": "0rBLRBYTwTEtnfFX"
        },
        {
            "nome": "Anna Saunders",
            "email": "forhugheschristopher@example.org",
            "password": "33^t3AIn+%",
            "administrador": "true",
            "_id": "0sbGVn0lz3bXWzjS"
        },
        {
            "nome": "Mark Harris",
            "email": "norpmerritt@example.org",
            "password": "so0WC2b##v",
            "administrador": "true",
            "_id": "0uSN805M2lMAs1G0"
        },
        {
            "nome": "Catherine Leonard",
            "email": "imagineadamsbryan@example.org",
            "password": "0_75MG_cM%",
            "administrador": "true",
            "_id": "0wPCgew3Gua67Bld"
  ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220630 17:12:05.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.293" endtime="20220630 17:12:05.326"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.327" endtime="20220630 17:12:05.327"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.334" level="INFO">${response_body} = {'quantidade': 2852, 'usuarios': [{'nome': 'Danny Young', 'email': 'hardsnowjessica@example.net', 'password': 'K&amp;72JQKnb!', 'administrador': 'true', '_id': '01PzJKKEuex0ZjVb'}, {'nome': 'Jon Price', '...</msg>
<status status="PASS" starttime="20220630 17:12:05.327" endtime="20220630 17:12:05.334"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.293" endtime="20220630 17:12:05.334"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.335" endtime="20220630 17:12:05.336"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.335" endtime="20220630 17:12:05.336"/>
</kw>
<kw name="Validar Quantidade De Usuarios &gt; 0" library="common" sourcename="Validar Quantidade De ${item} ${operador} ${quantidade}">
<kw name="Should Be True" library="BuiltIn">
<arg>${response_body['quantidade']} ${operador} ${quantidade}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.336" endtime="20220630 17:12:05.337"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.336" endtime="20220630 17:12:05.337"/>
</kw>
<tag>Buscar_Todos_Usuarios</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.256" endtime="20220630 17:12:05.337"/>
</test>
<test id="s1-t2" name="Cenario: Buscar Usuario Por ID Valido Nao Administrador" line="19">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario_valido}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.340" level="INFO">${nome} = Matthew Nguyen</msg>
<status status="PASS" starttime="20220630 17:12:05.340" endtime="20220630 17:12:05.340"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.341" level="INFO">${email} = victoriaking@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.340" endtime="20220630 17:12:05.341"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.341" level="INFO">${word} = opportunity</msg>
<status status="PASS" starttime="20220630 17:12:05.341" endtime="20220630 17:12:05.341"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.341" level="INFO">${email} = opportunityvictoriaking@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.341" endtime="20220630 17:12:05.341"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.342" level="INFO">${senha} = zK@&amp;2Qoyjk</msg>
<status status="PASS" starttime="20220630 17:12:05.341" endtime="20220630 17:12:05.342"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.342" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.342" endtime="20220630 17:12:05.342"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.342" level="INFO">&amp;{usuario} = { nome=Matthew Nguyen | email=opportunityvictoriaking@example.net | password=zK@&amp;2Qoyjk | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.342" endtime="20220630 17:12:05.342"/>
</kw>
<msg timestamp="20220630 17:12:05.343" level="INFO">${usuario} = {'nome': 'Matthew Nguyen', 'email': 'opportunityvictoriaking@example.net', 'password': 'zK@&amp;2Qoyjk', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.340" endtime="20220630 17:12:05.343"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.343" endtime="20220630 17:12:05.343"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.364" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '126', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Matthew Nguyen", "email": "opportunityvictoriaking@example.net", "password": "zK@&amp;2Qoyjk", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.364" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dc2e9430-a432-4e28-a35c-13f7d1e00b58', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "fsh4YPdIbMddyp0u"
} 
 </msg>
<msg timestamp="20220630 17:12:05.364" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.343" endtime="20220630 17:12:05.364"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.364" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.364" endtime="20220630 17:12:05.364"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.365" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'fsh4YPdIbMddyp0u'}</msg>
<status status="PASS" starttime="20220630 17:12:05.365" endtime="20220630 17:12:05.365"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.343" endtime="20220630 17:12:05.366"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.366" endtime="20220630 17:12:05.367"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.366" endtime="20220630 17:12:05.367"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.367" endtime="20220630 17:12:05.367"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.367" endtime="20220630 17:12:05.368"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.368" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.368" endtime="20220630 17:12:05.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.368" endtime="20220630 17:12:05.369"/>
</kw>
<msg timestamp="20220630 17:12:05.369" level="INFO">${usuario_valido} = {'nome': 'Matthew Nguyen', 'email': 'opportunityvictoriaking@example.net', 'password': 'zK@&amp;2Qoyjk', 'administrador': 'false', '_id': 'fsh4YPdIbMddyp0u'}</msg>
<status status="PASS" starttime="20220630 17:12:05.339" endtime="20220630 17:12:05.369"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario_valido['_id']}&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.373" level="INFO">GET Request : url=http://localhost:3000/usuarios/fsh4YPdIbMddyp0u 
 path_url=/usuarios/fsh4YPdIbMddyp0u 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220630 17:12:05.373" level="INFO">GET Response : url=http://localhost:3000/usuarios/fsh4YPdIbMddyp0u 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b9bc7a0e-8d65-4951-a643-f22f1cfb9fb8', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '175', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Matthew Nguyen",
    "email": "opportunityvictoriaking@example.net",
    "password": "zK@&amp;2Qoyjk",
    "administrador": "false",
    "_id": "fsh4YPdIbMddyp0u"
} 
 </msg>
<msg timestamp="20220630 17:12:05.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.370" endtime="20220630 17:12:05.373"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.373" endtime="20220630 17:12:05.374"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.375" level="INFO">${response_body} = {'nome': 'Matthew Nguyen', 'email': 'opportunityvictoriaking@example.net', 'password': 'zK@&amp;2Qoyjk', 'administrador': 'false', '_id': 'fsh4YPdIbMddyp0u'}</msg>
<status status="PASS" starttime="20220630 17:12:05.374" endtime="20220630 17:12:05.375"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.369" endtime="20220630 17:12:05.375"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.376" endtime="20220630 17:12:05.376"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.375" endtime="20220630 17:12:05.377"/>
</kw>
<kw name="Validar Usuario &quot;${usuario_valido['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Usuario &quot;${id_usuario_cadastrado}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<arg>${id_usuario_cadastrado}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.377" endtime="20220630 17:12:05.378"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.377" endtime="20220630 17:12:05.378"/>
</kw>
<tag>Buscar_Usuario_Valido_Nao_Administrador</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.339" endtime="20220630 17:12:05.378"/>
</test>
<test id="s1-t3" name="Cenario: Buscar Usuario Por ID Valido Administrador" line="26">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario_valido}</var>
<arg>"Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.381" level="INFO">${nome} = Carolyn Chapman</msg>
<status status="PASS" starttime="20220630 17:12:05.381" endtime="20220630 17:12:05.381"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.382" level="INFO">${email} = mathischristopher@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.381" endtime="20220630 17:12:05.382"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.382" level="INFO">${word} = use</msg>
<status status="PASS" starttime="20220630 17:12:05.382" endtime="20220630 17:12:05.382"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.382" level="INFO">${email} = usemathischristopher@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.382" endtime="20220630 17:12:05.382"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.383" level="INFO">${senha} = )CnVfe0D4+</msg>
<status status="PASS" starttime="20220630 17:12:05.382" endtime="20220630 17:12:05.383"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.383" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220630 17:12:05.383" endtime="20220630 17:12:05.383"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.383" level="INFO">&amp;{usuario} = { nome=Carolyn Chapman | email=usemathischristopher@example.net | password=)CnVfe0D4+ | administrador=true }</msg>
<status status="PASS" starttime="20220630 17:12:05.383" endtime="20220630 17:12:05.384"/>
</kw>
<msg timestamp="20220630 17:12:05.384" level="INFO">${usuario} = {'nome': 'Carolyn Chapman', 'email': 'usemathischristopher@example.net', 'password': ')CnVfe0D4+', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220630 17:12:05.381" endtime="20220630 17:12:05.384"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.384" endtime="20220630 17:12:05.384"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.404" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '123', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Carolyn Chapman", "email": "usemathischristopher@example.net", "password": ")CnVfe0D4+", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.404" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'aa5d5873-5e04-4a05-a434-504a514df8f2', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "4bMfMYviakpsyT7U"
} 
 </msg>
<msg timestamp="20220630 17:12:05.404" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.384" endtime="20220630 17:12:05.404"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.404" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.404" endtime="20220630 17:12:05.404"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.405" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '4bMfMYviakpsyT7U'}</msg>
<status status="PASS" starttime="20220630 17:12:05.404" endtime="20220630 17:12:05.405"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.384" endtime="20220630 17:12:05.405"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.406" endtime="20220630 17:12:05.407"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.406" endtime="20220630 17:12:05.407"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.407" endtime="20220630 17:12:05.408"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.407" endtime="20220630 17:12:05.408"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.408" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.408" endtime="20220630 17:12:05.408"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.408" endtime="20220630 17:12:05.409"/>
</kw>
<msg timestamp="20220630 17:12:05.409" level="INFO">${usuario_valido} = {'nome': 'Carolyn Chapman', 'email': 'usemathischristopher@example.net', 'password': ')CnVfe0D4+', 'administrador': 'true', '_id': '4bMfMYviakpsyT7U'}</msg>
<status status="PASS" starttime="20220630 17:12:05.380" endtime="20220630 17:12:05.409"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario_valido['_id']}&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.413" level="INFO">GET Request : url=http://localhost:3000/usuarios/4bMfMYviakpsyT7U 
 path_url=/usuarios/4bMfMYviakpsyT7U 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220630 17:12:05.413" level="INFO">GET Response : url=http://localhost:3000/usuarios/4bMfMYviakpsyT7U 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cf689136-5c2e-4f07-ba2b-ee784e36716d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '172', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Carolyn Chapman",
    "email": "usemathischristopher@example.net",
    "password": ")CnVfe0D4+",
    "administrador": "true",
    "_id": "4bMfMYviakpsyT7U"
} 
 </msg>
<msg timestamp="20220630 17:12:05.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.410" endtime="20220630 17:12:05.413"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.413" endtime="20220630 17:12:05.414"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.414" level="INFO">${response_body} = {'nome': 'Carolyn Chapman', 'email': 'usemathischristopher@example.net', 'password': ')CnVfe0D4+', 'administrador': 'true', '_id': '4bMfMYviakpsyT7U'}</msg>
<status status="PASS" starttime="20220630 17:12:05.414" endtime="20220630 17:12:05.414"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.409" endtime="20220630 17:12:05.414"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.415" endtime="20220630 17:12:05.416"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.415" endtime="20220630 17:12:05.416"/>
</kw>
<kw name="Validar Usuario &quot;${usuario_valido['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Usuario &quot;${id_usuario_cadastrado}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<arg>${id_usuario_cadastrado}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.417" endtime="20220630 17:12:05.418"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.416" endtime="20220630 17:12:05.418"/>
</kw>
<tag>Buscar_Usuario_Valido_Administrador</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.380" endtime="20220630 17:12:05.418"/>
</test>
<test id="s1-t4" name="Cenario: Buscar Usuario Por Id Invalido" line="33">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_id_invalido</arg>
<doc>Necessita de 2 argumentos o primeiro é o json e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${carrinho}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 17:12:05.421" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220630 17:12:05.421" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220630 17:12:05.420" endtime="20220630 17:12:05.421"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220630 17:12:05.422" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.421" endtime="20220630 17:12:05.422"/>
</kw>
<msg timestamp="20220630 17:12:05.422" level="INFO">${carrinho} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.420" endtime="20220630 17:12:05.422"/>
</kw>
<msg timestamp="20220630 17:12:05.423" level="INFO">${usuario} = Invalido</msg>
<status status="PASS" starttime="20220630 17:12:05.420" endtime="20220630 17:12:05.423"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario}&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.427" level="INFO">GET Request : url=http://localhost:3000/usuarios/Invalido 
 path_url=/usuarios/Invalido 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220630 17:12:05.427" level="INFO">GET Response : url=http://localhost:3000/usuarios/Invalido 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '990bd25b-dc55-422b-a33f-d59fe1bb1fca', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg timestamp="20220630 17:12:05.427" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.424" endtime="20220630 17:12:05.427"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.428" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.427" endtime="20220630 17:12:05.428"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.429" level="INFO">${response_body} = {'message': 'Usuário não encontrado'}</msg>
<status status="PASS" starttime="20220630 17:12:05.428" endtime="20220630 17:12:05.429"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.423" endtime="20220630 17:12:05.430"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.430" endtime="20220630 17:12:05.432"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.430" endtime="20220630 17:12:05.432"/>
</kw>
<kw name="Validar Mensagem &quot;Usuário não encontrado&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.432" endtime="20220630 17:12:05.433"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.432" endtime="20220630 17:12:05.433"/>
</kw>
<tag>Buscar_Usuario_Invalido</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.419" endtime="20220630 17:12:05.433"/>
</test>
<test id="s1-t5" name="Cenario: Cadastrar Um Usuario Administrador Com Sucesso" line="44">
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>"Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.437" level="INFO">${nome} = Darlene Sanchez</msg>
<status status="PASS" starttime="20220630 17:12:05.436" endtime="20220630 17:12:05.437"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.437" level="INFO">${email} = dominiccantu@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.437" endtime="20220630 17:12:05.437"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.437" level="INFO">${word} = sell</msg>
<status status="PASS" starttime="20220630 17:12:05.437" endtime="20220630 17:12:05.437"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.438" level="INFO">${email} = selldominiccantu@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.438" endtime="20220630 17:12:05.438"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.438" level="INFO">${senha} = s549lPKs&amp;m</msg>
<status status="PASS" starttime="20220630 17:12:05.438" endtime="20220630 17:12:05.438"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.439" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220630 17:12:05.439" endtime="20220630 17:12:05.439"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.440" level="INFO">&amp;{usuario} = { nome=Darlene Sanchez | email=selldominiccantu@example.net | password=s549lPKs&amp;m | administrador=true }</msg>
<status status="PASS" starttime="20220630 17:12:05.439" endtime="20220630 17:12:05.440"/>
</kw>
<msg timestamp="20220630 17:12:05.441" level="INFO">${usuario} = {'nome': 'Darlene Sanchez', 'email': 'selldominiccantu@example.net', 'password': 's549lPKs&amp;m', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220630 17:12:05.435" endtime="20220630 17:12:05.441"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.442" endtime="20220630 17:12:05.442"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.462" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Darlene Sanchez", "email": "selldominiccantu@example.net", "password": "s549lPKs&amp;m", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.462" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5a1c1ce7-3425-4ba7-9810-7b5ddb9c825d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "UQRHKuYSuBc1kOBV"
} 
 </msg>
<msg timestamp="20220630 17:12:05.463" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.442" endtime="20220630 17:12:05.463"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.463" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.463" endtime="20220630 17:12:05.463"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.464" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'UQRHKuYSuBc1kOBV'}</msg>
<status status="PASS" starttime="20220630 17:12:05.463" endtime="20220630 17:12:05.464"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.441" endtime="20220630 17:12:05.464"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.465" endtime="20220630 17:12:05.466"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.465" endtime="20220630 17:12:05.466"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.467" endtime="20220630 17:12:05.467"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.466" endtime="20220630 17:12:05.467"/>
</kw>
<tag>Cadastrar_Usuario_Administrador</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.434" endtime="20220630 17:12:05.468"/>
</test>
<test id="s1-t6" name="Cenario: Cadastrar Um Usuario Nao Administrador Com Sucesso" line="51">
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.470" level="INFO">${nome} = Kimberly Murray</msg>
<status status="PASS" starttime="20220630 17:12:05.470" endtime="20220630 17:12:05.470"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.470" level="INFO">${email} = ccastro@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.470" endtime="20220630 17:12:05.470"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.471" level="INFO">${word} = yeah</msg>
<status status="PASS" starttime="20220630 17:12:05.470" endtime="20220630 17:12:05.471"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.471" level="INFO">${email} = yeahccastro@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.471" endtime="20220630 17:12:05.471"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.471" level="INFO">${senha} = 7^c0Ydbd&amp;G</msg>
<status status="PASS" starttime="20220630 17:12:05.471" endtime="20220630 17:12:05.471"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.471" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.471" endtime="20220630 17:12:05.471"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.472" level="INFO">&amp;{usuario} = { nome=Kimberly Murray | email=yeahccastro@example.com | password=7^c0Ydbd&amp;G | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.472" endtime="20220630 17:12:05.472"/>
</kw>
<msg timestamp="20220630 17:12:05.472" level="INFO">${usuario} = {'nome': 'Kimberly Murray', 'email': 'yeahccastro@example.com', 'password': '7^c0Ydbd&amp;G', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.469" endtime="20220630 17:12:05.472"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.473" endtime="20220630 17:12:05.473"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.494" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '115', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Kimberly Murray", "email": "yeahccastro@example.com", "password": "7^c0Ydbd&amp;G", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.495" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '063d1974-6a1d-4131-9dac-dc1ea6c4921d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "UbVmjc6r2AzVfePF"
} 
 </msg>
<msg timestamp="20220630 17:12:05.495" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.473" endtime="20220630 17:12:05.495"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.495" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.495" endtime="20220630 17:12:05.495"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.496" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'UbVmjc6r2AzVfePF'}</msg>
<status status="PASS" starttime="20220630 17:12:05.495" endtime="20220630 17:12:05.496"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.473" endtime="20220630 17:12:05.496"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.497" endtime="20220630 17:12:05.498"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.497" endtime="20220630 17:12:05.498"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.498" endtime="20220630 17:12:05.499"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.498" endtime="20220630 17:12:05.499"/>
</kw>
<tag>Cadastrar_Usuario</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.469" endtime="20220630 17:12:05.500"/>
</test>
<test id="s1-t7" name="Cenario: Tentativa de Cadastrar Um Usuario Com Email Ja Cadastrado" line="59">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.503" level="INFO">${nome} = Deborah Wallace</msg>
<status status="PASS" starttime="20220630 17:12:05.502" endtime="20220630 17:12:05.503"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.503" level="INFO">${email} = mary67@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.503" endtime="20220630 17:12:05.503"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.503" level="INFO">${word} = main</msg>
<status status="PASS" starttime="20220630 17:12:05.503" endtime="20220630 17:12:05.503"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.503" level="INFO">${email} = mainmary67@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.503" endtime="20220630 17:12:05.503"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.504" level="INFO">${senha} = #q(&amp;4R3y1V</msg>
<status status="PASS" starttime="20220630 17:12:05.503" endtime="20220630 17:12:05.504"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.504" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220630 17:12:05.504" endtime="20220630 17:12:05.504"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.504" level="INFO">&amp;{usuario} = { nome=Deborah Wallace | email=mainmary67@example.com | password=#q(&amp;4R3y1V | administrador=true }</msg>
<status status="PASS" starttime="20220630 17:12:05.504" endtime="20220630 17:12:05.504"/>
</kw>
<msg timestamp="20220630 17:12:05.505" level="INFO">${usuario} = {'nome': 'Deborah Wallace', 'email': 'mainmary67@example.com', 'password': '#q(&amp;4R3y1V', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220630 17:12:05.502" endtime="20220630 17:12:05.505"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.505" endtime="20220630 17:12:05.505"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.524" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '113', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Deborah Wallace", "email": "mainmary67@example.com", "password": "#q(&amp;4R3y1V", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.524" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5b4e3e2e-9bc1-4e29-90a9-213be58f0577', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uCuepuHKifYBvXxn"
} 
 </msg>
<msg timestamp="20220630 17:12:05.525" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.505" endtime="20220630 17:12:05.525"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.525" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.525" endtime="20220630 17:12:05.525"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.526" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'uCuepuHKifYBvXxn'}</msg>
<status status="PASS" starttime="20220630 17:12:05.525" endtime="20220630 17:12:05.526"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.505" endtime="20220630 17:12:05.526"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.527" endtime="20220630 17:12:05.527"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.526" endtime="20220630 17:12:05.527"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.528" endtime="20220630 17:12:05.528"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.527" endtime="20220630 17:12:05.528"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.529" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.528" endtime="20220630 17:12:05.529"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.529" endtime="20220630 17:12:05.529"/>
</kw>
<msg timestamp="20220630 17:12:05.529" level="INFO">${usuario} = {'nome': 'Deborah Wallace', 'email': 'mainmary67@example.com', 'password': '#q(&amp;4R3y1V', 'administrador': 'true', '_id': 'uCuepuHKifYBvXxn'}</msg>
<status status="PASS" starttime="20220630 17:12:05.501" endtime="20220630 17:12:05.530"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220630 17:12:05.531" level="INFO">Removed item with key '_id' and value 'uCuepuHKifYBvXxn'.</msg>
<status status="PASS" starttime="20220630 17:12:05.531" endtime="20220630 17:12:05.531"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.531" endtime="20220630 17:12:05.531"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.535" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '113', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Deborah Wallace", "email": "mainmary67@example.com", "password": "#q(&amp;4R3y1V", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.535" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9b554a1b-1118-4cdf-ba35-2e2e6b0ec4a2', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg timestamp="20220630 17:12:05.535" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.531" endtime="20220630 17:12:05.535"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.536" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.535" endtime="20220630 17:12:05.536"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.536" level="INFO">${response_body} = {'message': 'Este email já está sendo usado'}</msg>
<status status="PASS" starttime="20220630 17:12:05.536" endtime="20220630 17:12:05.536"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.530" endtime="20220630 17:12:05.536"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.537" endtime="20220630 17:12:05.538"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.537" endtime="20220630 17:12:05.538"/>
</kw>
<kw name="Validar Mensagem &quot;Este email já está sendo usado&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.539" endtime="20220630 17:12:05.539"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.539" endtime="20220630 17:12:05.540"/>
</kw>
<tag>Cadastrar_Usuario_Email_Ja_Utilizado</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.501" endtime="20220630 17:12:05.540"/>
</test>
<test id="s1-t8" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Nome" line="68">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_nome</arg>
<doc>Necessita de 2 argumentos o primeiro é o json e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${carrinho}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 17:12:05.543" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220630 17:12:05.543" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220630 17:12:05.542" endtime="20220630 17:12:05.543"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220630 17:12:05.544" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.543" endtime="20220630 17:12:05.544"/>
</kw>
<msg timestamp="20220630 17:12:05.544" level="INFO">${carrinho} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.542" endtime="20220630 17:12:05.544"/>
</kw>
<msg timestamp="20220630 17:12:05.544" level="INFO">${usuario} = {'email': 'emailAleatorio234747@SuperRandominco.com', 'password': 'SenhaAleatoria', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220630 17:12:05.542" endtime="20220630 17:12:05.544"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.545" endtime="20220630 17:12:05.545"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.548" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"email": "emailAleatorio234747@SuperRandominco.com", "password": "SenhaAleatoria", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.548" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '78ca8c46-cde9-4cc1-953f-4905a998d3c5', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '38', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome é obrigatório"
} 
 </msg>
<msg timestamp="20220630 17:12:05.548" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.545" endtime="20220630 17:12:05.548"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.549" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.549" endtime="20220630 17:12:05.549"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.550" level="INFO">${response_body} = {'nome': 'nome é obrigatório'}</msg>
<status status="PASS" starttime="20220630 17:12:05.549" endtime="20220630 17:12:05.550"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.545" endtime="20220630 17:12:05.550"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.551" endtime="20220630 17:12:05.552"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.551" endtime="20220630 17:12:05.552"/>
</kw>
<kw name="Validar &quot;nome&quot; Com O Valor &quot;nome é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.553" endtime="20220630 17:12:05.553"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.552" endtime="20220630 17:12:05.553"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Nome</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.541" endtime="20220630 17:12:05.554"/>
</test>
<test id="s1-t9" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Email" line="75">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_email</arg>
<doc>Necessita de 2 argumentos o primeiro é o json e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${carrinho}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 17:12:05.556" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220630 17:12:05.557" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220630 17:12:05.556" endtime="20220630 17:12:05.557"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220630 17:12:05.557" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.557" endtime="20220630 17:12:05.557"/>
</kw>
<msg timestamp="20220630 17:12:05.557" level="INFO">${carrinho} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.556" endtime="20220630 17:12:05.557"/>
</kw>
<msg timestamp="20220630 17:12:05.558" level="INFO">${usuario} = {'nome': 'NomeAleatorio', 'password': 'NaoExisto', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220630 17:12:05.556" endtime="20220630 17:12:05.558"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.558" endtime="20220630 17:12:05.559"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.562" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '75', 'Content-Type': 'application/json'} 
 body=b'{"nome": "NomeAleatorio", "password": "NaoExisto", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.562" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b89f0f05-8929-4ff4-91cd-db7899a4f733', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '40', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email é obrigatório"
} 
 </msg>
<msg timestamp="20220630 17:12:05.562" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.559" endtime="20220630 17:12:05.562"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.563" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.562" endtime="20220630 17:12:05.563"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.564" level="INFO">${response_body} = {'email': 'email é obrigatório'}</msg>
<status status="PASS" starttime="20220630 17:12:05.563" endtime="20220630 17:12:05.564"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.558" endtime="20220630 17:12:05.564"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.565" endtime="20220630 17:12:05.565"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.564" endtime="20220630 17:12:05.565"/>
</kw>
<kw name="Validar &quot;email&quot; Com O Valor &quot;email é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.566" endtime="20220630 17:12:05.567"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.566" endtime="20220630 17:12:05.567"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Email</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.555" endtime="20220630 17:12:05.567"/>
</test>
<test id="s1-t10" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Senha" line="82">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_senha</arg>
<doc>Necessita de 2 argumentos o primeiro é o json e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${carrinho}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 17:12:05.570" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220630 17:12:05.570" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220630 17:12:05.569" endtime="20220630 17:12:05.570"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220630 17:12:05.570" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.570" endtime="20220630 17:12:05.570"/>
</kw>
<msg timestamp="20220630 17:12:05.570" level="INFO">${carrinho} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.569" endtime="20220630 17:12:05.570"/>
</kw>
<msg timestamp="20220630 17:12:05.571" level="INFO">${usuario} = {'nome': 'NomeAleatorio', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220630 17:12:05.569" endtime="20220630 17:12:05.571"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.572" endtime="20220630 17:12:05.572"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.575" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '97', 'Content-Type': 'application/json'} 
 body=b'{"nome": "NomeAleatorio", "email": "NuncaSereiCadastrado@NaoExisto.com", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.575" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b5e7ca96-4120-4325-a165-e2fdcf973a3f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "password": "password é obrigatório"
} 
 </msg>
<msg timestamp="20220630 17:12:05.575" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.572" endtime="20220630 17:12:05.575"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.576" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.576" endtime="20220630 17:12:05.576"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.577" level="INFO">${response_body} = {'password': 'password é obrigatório'}</msg>
<status status="PASS" starttime="20220630 17:12:05.576" endtime="20220630 17:12:05.577"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.571" endtime="20220630 17:12:05.577"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.578" endtime="20220630 17:12:05.579"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.578" endtime="20220630 17:12:05.579"/>
</kw>
<kw name="Validar &quot;password&quot; Com O Valor &quot;password é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.580" endtime="20220630 17:12:05.580"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.579" endtime="20220630 17:12:05.580"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Senha</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.568" endtime="20220630 17:12:05.581"/>
</test>
<test id="s1-t11" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Administrador" line="89">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_administrador</arg>
<doc>Necessita de 2 argumentos o primeiro é o json e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${carrinho}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 17:12:05.583" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220630 17:12:05.583" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220630 17:12:05.583" endtime="20220630 17:12:05.583"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220630 17:12:05.584" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.583" endtime="20220630 17:12:05.584"/>
</kw>
<msg timestamp="20220630 17:12:05.584" level="INFO">${carrinho} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220630 17:12:05.583" endtime="20220630 17:12:05.584"/>
</kw>
<msg timestamp="20220630 17:12:05.584" level="INFO">${usuario} = {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto'}</msg>
<status status="PASS" starttime="20220630 17:12:05.582" endtime="20220630 17:12:05.584"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.585" endtime="20220630 17:12:05.585"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.588" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '104', 'Content-Type': 'application/json'} 
 body=b'{"nome": "MaisFakeNotaDe3Reais", "email": "NuncaSereiCadastrado@NaoExisto.com", "password": "NaoExisto"}' 
 </msg>
<msg timestamp="20220630 17:12:05.588" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1cbe845f-81f9-4800-bef5-9c4e12cf3fa4', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "administrador": "administrador é obrigatório"
} 
 </msg>
<msg timestamp="20220630 17:12:05.588" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.585" endtime="20220630 17:12:05.588"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.589" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.589" endtime="20220630 17:12:05.589"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.590" level="INFO">${response_body} = {'administrador': 'administrador é obrigatório'}</msg>
<status status="PASS" starttime="20220630 17:12:05.589" endtime="20220630 17:12:05.590"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.585" endtime="20220630 17:12:05.590"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.591" endtime="20220630 17:12:05.592"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.591" endtime="20220630 17:12:05.592"/>
</kw>
<kw name="Validar &quot;administrador&quot; Com O Valor &quot;administrador é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.593" endtime="20220630 17:12:05.594"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.593" endtime="20220630 17:12:05.594"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Administrador</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.582" endtime="20220630 17:12:05.594"/>
</test>
<test id="s1-t12" name="Cenerario: Atualizar Dados de Um Usuario Nao Cadastrado" line="100">
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.597" level="INFO">${nome} = Joshua Frye</msg>
<status status="PASS" starttime="20220630 17:12:05.596" endtime="20220630 17:12:05.597"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.597" level="INFO">${email} = katrina06@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.597" endtime="20220630 17:12:05.597"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.597" level="INFO">${word} = morning</msg>
<status status="PASS" starttime="20220630 17:12:05.597" endtime="20220630 17:12:05.597"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.598" level="INFO">${email} = morningkatrina06@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.597" endtime="20220630 17:12:05.598"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.598" level="INFO">${senha} = +3G$_Ke5^8</msg>
<status status="PASS" starttime="20220630 17:12:05.598" endtime="20220630 17:12:05.598"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.598" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.598" endtime="20220630 17:12:05.598"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.599" level="INFO">&amp;{usuario} = { nome=Joshua Frye | email=morningkatrina06@example.net | password=+3G$_Ke5^8 | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.598" endtime="20220630 17:12:05.599"/>
</kw>
<msg timestamp="20220630 17:12:05.599" level="INFO">${usuario} = {'nome': 'Joshua Frye', 'email': 'morningkatrina06@example.net', 'password': '+3G$_Ke5^8', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.596" endtime="20220630 17:12:05.599"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/NaoExisto&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.600" endtime="20220630 17:12:05.602"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.623" level="INFO">PUT Request : url=http://localhost:3000/usuarios/NaoExisto 
 path_url=/usuarios/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '116', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Joshua Frye", "email": "morningkatrina06@example.net", "password": "+3G$_Ke5^8", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.623" level="INFO">PUT Response : url=http://localhost:3000/usuarios/NaoExisto 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3fc874ed-e38d-469c-b32c-48eba3974034', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "umUZIp2OllYylfIz"
} 
 </msg>
<msg timestamp="20220630 17:12:05.623" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.602" endtime="20220630 17:12:05.623"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.624" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.624" endtime="20220630 17:12:05.624"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.625" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'umUZIp2OllYylfIz'}</msg>
<status status="PASS" starttime="20220630 17:12:05.624" endtime="20220630 17:12:05.625"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.600" endtime="20220630 17:12:05.626"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.626" endtime="20220630 17:12:05.627"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.626" endtime="20220630 17:12:05.627"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.628" endtime="20220630 17:12:05.629"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.628" endtime="20220630 17:12:05.629"/>
</kw>
<tag>Atualizar_Dados_Usuario_Nao_Cadastrado</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.595" endtime="20220630 17:12:05.629"/>
</test>
<test id="s1-t13" name="Cenario: Atualizar Nome Do Usuario" line="107">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.632" level="INFO">${nome} = Michael Reynolds</msg>
<status status="PASS" starttime="20220630 17:12:05.631" endtime="20220630 17:12:05.632"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.632" level="INFO">${email} = davidcole@example.org</msg>
<status status="PASS" starttime="20220630 17:12:05.632" endtime="20220630 17:12:05.632"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.632" level="INFO">${word} = scientist</msg>
<status status="PASS" starttime="20220630 17:12:05.632" endtime="20220630 17:12:05.632"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.633" level="INFO">${email} = scientistdavidcole@example.org</msg>
<status status="PASS" starttime="20220630 17:12:05.633" endtime="20220630 17:12:05.633"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.633" level="INFO">${senha} = xW+!13Hm0T</msg>
<status status="PASS" starttime="20220630 17:12:05.633" endtime="20220630 17:12:05.633"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.633" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.633" endtime="20220630 17:12:05.633"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.634" level="INFO">&amp;{usuario} = { nome=Michael Reynolds | email=scientistdavidcole@example.org | password=xW+!13Hm0T | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.634" endtime="20220630 17:12:05.634"/>
</kw>
<msg timestamp="20220630 17:12:05.634" level="INFO">${usuario} = {'nome': 'Michael Reynolds', 'email': 'scientistdavidcole@example.org', 'password': 'xW+!13Hm0T', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.631" endtime="20220630 17:12:05.634"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.634" endtime="20220630 17:12:05.635"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.663" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '123', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Michael Reynolds", "email": "scientistdavidcole@example.org", "password": "xW+!13Hm0T", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.663" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dd80b7d8-7fa4-4b24-99b1-a70d2ef9abaf', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "v1YyYR4y7I2GLVoz"
} 
 </msg>
<msg timestamp="20220630 17:12:05.663" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.635" endtime="20220630 17:12:05.663"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.663" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.663" endtime="20220630 17:12:05.663"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.665" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'v1YyYR4y7I2GLVoz'}</msg>
<status status="PASS" starttime="20220630 17:12:05.664" endtime="20220630 17:12:05.665"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.634" endtime="20220630 17:12:05.665"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.666" endtime="20220630 17:12:05.667"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.665" endtime="20220630 17:12:05.668"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.668" endtime="20220630 17:12:05.668"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.668" endtime="20220630 17:12:05.668"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.669" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.669" endtime="20220630 17:12:05.669"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.669" endtime="20220630 17:12:05.670"/>
</kw>
<msg timestamp="20220630 17:12:05.670" level="INFO">${usuario} = {'nome': 'Michael Reynolds', 'email': 'scientistdavidcole@example.org', 'password': 'xW+!13Hm0T', 'administrador': 'false', '_id': 'v1YyYR4y7I2GLVoz'}</msg>
<status status="PASS" starttime="20220630 17:12:05.631" endtime="20220630 17:12:05.670"/>
</kw>
<kw name="Alterar &quot;nome&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${novo_usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.671" level="INFO">${nome} = John Clark</msg>
<status status="PASS" starttime="20220630 17:12:05.671" endtime="20220630 17:12:05.671"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.672" level="INFO">${email} = turnerwilliam@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.671" endtime="20220630 17:12:05.672"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.672" level="INFO">${word} = reason</msg>
<status status="PASS" starttime="20220630 17:12:05.672" endtime="20220630 17:12:05.672"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.673" level="INFO">${email} = reasonturnerwilliam@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.673" endtime="20220630 17:12:05.673"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.673" level="INFO">${senha} = z7I^Zq1Y!D</msg>
<status status="PASS" starttime="20220630 17:12:05.673" endtime="20220630 17:12:05.673"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.674" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.674" endtime="20220630 17:12:05.674"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.674" level="INFO">&amp;{usuario} = { nome=John Clark | email=reasonturnerwilliam@example.com | password=z7I^Zq1Y!D | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.674" endtime="20220630 17:12:05.674"/>
</kw>
<msg timestamp="20220630 17:12:05.675" level="INFO">${novo_usuario} = {'nome': 'John Clark', 'email': 'reasonturnerwilliam@example.com', 'password': 'z7I^Zq1Y!D', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.671" endtime="20220630 17:12:05.675"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.675" endtime="20220630 17:12:05.675"/>
</kw>
<msg timestamp="20220630 17:12:05.676" level="INFO">${usuario} = {'nome': 'John Clark', 'email': 'scientistdavidcole@example.org', 'password': 'xW+!13Hm0T', 'administrador': 'false', '_id': 'v1YyYR4y7I2GLVoz'}</msg>
<status status="PASS" starttime="20220630 17:12:05.670" endtime="20220630 17:12:05.676"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220630 17:12:05.677" level="INFO">Removed item with key '_id' and value 'v1YyYR4y7I2GLVoz'.</msg>
<status status="PASS" starttime="20220630 17:12:05.677" endtime="20220630 17:12:05.677"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.677" endtime="20220630 17:12:05.677"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.698" level="INFO">PUT Request : url=http://localhost:3000/usuarios/v1YyYR4y7I2GLVoz 
 path_url=/usuarios/v1YyYR4y7I2GLVoz 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '117', 'Content-Type': 'application/json'} 
 body=b'{"nome": "John Clark", "email": "scientistdavidcole@example.org", "password": "xW+!13Hm0T", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.698" level="INFO">PUT Response : url=http://localhost:3000/usuarios/v1YyYR4y7I2GLVoz 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '195ff529-6ffe-44db-9fa1-dec655844637', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220630 17:12:05.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.677" endtime="20220630 17:12:05.698"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.698" endtime="20220630 17:12:05.698"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.699" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220630 17:12:05.698" endtime="20220630 17:12:05.699"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.676" endtime="20220630 17:12:05.699"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.700" endtime="20220630 17:12:05.701"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.699" endtime="20220630 17:12:05.701"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.701" endtime="20220630 17:12:05.702"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.701" endtime="20220630 17:12:05.702"/>
</kw>
<tag>Atualizar_Nome_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.630" endtime="20220630 17:12:05.702"/>
</test>
<test id="s1-t14" name="Cenario: Atualizar Email Do Usuario" line="115">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.705" level="INFO">${nome} = Cynthia Sanchez</msg>
<status status="PASS" starttime="20220630 17:12:05.705" endtime="20220630 17:12:05.705"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.706" level="INFO">${email} = wmorrison@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.705" endtime="20220630 17:12:05.706"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.706" level="INFO">${word} = sell</msg>
<status status="PASS" starttime="20220630 17:12:05.706" endtime="20220630 17:12:05.706"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.706" level="INFO">${email} = sellwmorrison@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.706" endtime="20220630 17:12:05.707"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.707" level="INFO">${senha} = *37xJ)rQUJ</msg>
<status status="PASS" starttime="20220630 17:12:05.707" endtime="20220630 17:12:05.707"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.707" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.707" endtime="20220630 17:12:05.707"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.708" level="INFO">&amp;{usuario} = { nome=Cynthia Sanchez | email=sellwmorrison@example.net | password=*37xJ)rQUJ | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.707" endtime="20220630 17:12:05.708"/>
</kw>
<msg timestamp="20220630 17:12:05.708" level="INFO">${usuario} = {'nome': 'Cynthia Sanchez', 'email': 'sellwmorrison@example.net', 'password': '*37xJ)rQUJ', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.704" endtime="20220630 17:12:05.708"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.708" endtime="20220630 17:12:05.709"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.728" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '117', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Cynthia Sanchez", "email": "sellwmorrison@example.net", "password": "*37xJ)rQUJ", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.728" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9605eef2-9404-4dd3-92d4-95cb82933dd5', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "SKI88vjRI0xIDFKp"
} 
 </msg>
<msg timestamp="20220630 17:12:05.728" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.709" endtime="20220630 17:12:05.728"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.728" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.728" endtime="20220630 17:12:05.728"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.729" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'SKI88vjRI0xIDFKp'}</msg>
<status status="PASS" starttime="20220630 17:12:05.729" endtime="20220630 17:12:05.729"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.708" endtime="20220630 17:12:05.730"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.730" endtime="20220630 17:12:05.731"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.730" endtime="20220630 17:12:05.731"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.731" endtime="20220630 17:12:05.732"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.731" endtime="20220630 17:12:05.732"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.732" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.732" endtime="20220630 17:12:05.732"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.733" endtime="20220630 17:12:05.733"/>
</kw>
<msg timestamp="20220630 17:12:05.733" level="INFO">${usuario} = {'nome': 'Cynthia Sanchez', 'email': 'sellwmorrison@example.net', 'password': '*37xJ)rQUJ', 'administrador': 'false', '_id': 'SKI88vjRI0xIDFKp'}</msg>
<status status="PASS" starttime="20220630 17:12:05.704" endtime="20220630 17:12:05.733"/>
</kw>
<kw name="Alterar &quot;email&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${novo_usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.735" level="INFO">${nome} = Diane Harding</msg>
<status status="PASS" starttime="20220630 17:12:05.734" endtime="20220630 17:12:05.735"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.735" level="INFO">${email} = ufranklin@example.org</msg>
<status status="PASS" starttime="20220630 17:12:05.735" endtime="20220630 17:12:05.736"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.736" level="INFO">${word} = state</msg>
<status status="PASS" starttime="20220630 17:12:05.736" endtime="20220630 17:12:05.736"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.736" level="INFO">${email} = stateufranklin@example.org</msg>
<status status="PASS" starttime="20220630 17:12:05.736" endtime="20220630 17:12:05.736"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.736" level="INFO">${senha} = @ATd!VMD8_</msg>
<status status="PASS" starttime="20220630 17:12:05.736" endtime="20220630 17:12:05.736"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.737" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.737" endtime="20220630 17:12:05.737"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.737" level="INFO">&amp;{usuario} = { nome=Diane Harding | email=stateufranklin@example.org | password=@ATd!VMD8_ | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.737" endtime="20220630 17:12:05.737"/>
</kw>
<msg timestamp="20220630 17:12:05.737" level="INFO">${novo_usuario} = {'nome': 'Diane Harding', 'email': 'stateufranklin@example.org', 'password': '@ATd!VMD8_', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.734" endtime="20220630 17:12:05.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.738" endtime="20220630 17:12:05.738"/>
</kw>
<msg timestamp="20220630 17:12:05.738" level="INFO">${usuario} = {'nome': 'Cynthia Sanchez', 'email': 'stateufranklin@example.org', 'password': '*37xJ)rQUJ', 'administrador': 'false', '_id': 'SKI88vjRI0xIDFKp'}</msg>
<status status="PASS" starttime="20220630 17:12:05.734" endtime="20220630 17:12:05.739"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220630 17:12:05.740" level="INFO">Removed item with key '_id' and value 'SKI88vjRI0xIDFKp'.</msg>
<status status="PASS" starttime="20220630 17:12:05.740" endtime="20220630 17:12:05.740"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.740" endtime="20220630 17:12:05.740"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.760" level="INFO">PUT Request : url=http://localhost:3000/usuarios/SKI88vjRI0xIDFKp 
 path_url=/usuarios/SKI88vjRI0xIDFKp 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '118', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Cynthia Sanchez", "email": "stateufranklin@example.org", "password": "*37xJ)rQUJ", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.760" level="INFO">PUT Response : url=http://localhost:3000/usuarios/SKI88vjRI0xIDFKp 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ec2c5585-ce59-49d4-85ef-195ddce42b11', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220630 17:12:05.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.741" endtime="20220630 17:12:05.760"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.761" endtime="20220630 17:12:05.761"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.762" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220630 17:12:05.761" endtime="20220630 17:12:05.762"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.739" endtime="20220630 17:12:05.762"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.762" endtime="20220630 17:12:05.763"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.762" endtime="20220630 17:12:05.763"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.764" endtime="20220630 17:12:05.764"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.764" endtime="20220630 17:12:05.764"/>
</kw>
<tag>Atualizar_Email_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.703" endtime="20220630 17:12:05.765"/>
</test>
<test id="s1-t15" name="Cenario: Atualizar Senha Do Usuario" line="123">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.767" level="INFO">${nome} = Mary Mcdonald</msg>
<status status="PASS" starttime="20220630 17:12:05.767" endtime="20220630 17:12:05.767"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.768" level="INFO">${email} = proctoralex@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.767" endtime="20220630 17:12:05.768"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.768" level="INFO">${word} = Republican</msg>
<status status="PASS" starttime="20220630 17:12:05.768" endtime="20220630 17:12:05.768"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.768" level="INFO">${email} = Republicanproctoralex@example.com</msg>
<status status="PASS" starttime="20220630 17:12:05.768" endtime="20220630 17:12:05.768"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.768" level="INFO">${senha} = !e5HMWXc#G</msg>
<status status="PASS" starttime="20220630 17:12:05.768" endtime="20220630 17:12:05.769"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.769" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.769" endtime="20220630 17:12:05.769"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.769" level="INFO">&amp;{usuario} = { nome=Mary Mcdonald | email=Republicanproctoralex@example.com | password=!e5HMWXc#G | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.769" endtime="20220630 17:12:05.769"/>
</kw>
<msg timestamp="20220630 17:12:05.770" level="INFO">${usuario} = {'nome': 'Mary Mcdonald', 'email': 'Republicanproctoralex@example.com', 'password': '!e5HMWXc#G', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.767" endtime="20220630 17:12:05.770"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.770" endtime="20220630 17:12:05.770"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.789" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '123', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Mary Mcdonald", "email": "Republicanproctoralex@example.com", "password": "!e5HMWXc#G", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.790" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '960bceb4-d5d0-4915-b20b-cbd91ce79ae1', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "cTI0j5vE3KXGseii"
} 
 </msg>
<msg timestamp="20220630 17:12:05.790" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.770" endtime="20220630 17:12:05.790"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.791" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.790" endtime="20220630 17:12:05.791"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.792" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'cTI0j5vE3KXGseii'}</msg>
<status status="PASS" starttime="20220630 17:12:05.791" endtime="20220630 17:12:05.792"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.770" endtime="20220630 17:12:05.792"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.793" endtime="20220630 17:12:05.795"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.792" endtime="20220630 17:12:05.795"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.795" endtime="20220630 17:12:05.796"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.795" endtime="20220630 17:12:05.796"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.797" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.796" endtime="20220630 17:12:05.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.797" endtime="20220630 17:12:05.797"/>
</kw>
<msg timestamp="20220630 17:12:05.798" level="INFO">${usuario} = {'nome': 'Mary Mcdonald', 'email': 'Republicanproctoralex@example.com', 'password': '!e5HMWXc#G', 'administrador': 'false', '_id': 'cTI0j5vE3KXGseii'}</msg>
<status status="PASS" starttime="20220630 17:12:05.766" endtime="20220630 17:12:05.798"/>
</kw>
<kw name="Alterar &quot;password&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${novo_usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.799" level="INFO">${nome} = Debra Spencer</msg>
<status status="PASS" starttime="20220630 17:12:05.799" endtime="20220630 17:12:05.799"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.799" level="INFO">${email} = scottkelly@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.799" endtime="20220630 17:12:05.800"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.800" level="INFO">${word} = least</msg>
<status status="PASS" starttime="20220630 17:12:05.800" endtime="20220630 17:12:05.800"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.800" level="INFO">${email} = leastscottkelly@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.800" endtime="20220630 17:12:05.800"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.800" level="INFO">${senha} = 0*r6QkGg%E</msg>
<status status="PASS" starttime="20220630 17:12:05.800" endtime="20220630 17:12:05.800"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.801" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.800" endtime="20220630 17:12:05.801"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.801" level="INFO">&amp;{usuario} = { nome=Debra Spencer | email=leastscottkelly@example.net | password=0*r6QkGg%E | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.801" endtime="20220630 17:12:05.801"/>
</kw>
<msg timestamp="20220630 17:12:05.801" level="INFO">${novo_usuario} = {'nome': 'Debra Spencer', 'email': 'leastscottkelly@example.net', 'password': '0*r6QkGg%E', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.799" endtime="20220630 17:12:05.801"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.801" endtime="20220630 17:12:05.802"/>
</kw>
<msg timestamp="20220630 17:12:05.802" level="INFO">${usuario} = {'nome': 'Mary Mcdonald', 'email': 'Republicanproctoralex@example.com', 'password': '0*r6QkGg%E', 'administrador': 'false', '_id': 'cTI0j5vE3KXGseii'}</msg>
<status status="PASS" starttime="20220630 17:12:05.798" endtime="20220630 17:12:05.802"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220630 17:12:05.804" level="INFO">Removed item with key '_id' and value 'cTI0j5vE3KXGseii'.</msg>
<status status="PASS" starttime="20220630 17:12:05.803" endtime="20220630 17:12:05.804"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.803" endtime="20220630 17:12:05.804"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.824" level="INFO">PUT Request : url=http://localhost:3000/usuarios/cTI0j5vE3KXGseii 
 path_url=/usuarios/cTI0j5vE3KXGseii 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '123', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Mary Mcdonald", "email": "Republicanproctoralex@example.com", "password": "0*r6QkGg%E", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.824" level="INFO">PUT Response : url=http://localhost:3000/usuarios/cTI0j5vE3KXGseii 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'eaa9d9b7-1454-4072-b854-c3ad46ae1c3e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220630 17:12:05.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.804" endtime="20220630 17:12:05.825"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.825" endtime="20220630 17:12:05.825"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.826" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220630 17:12:05.825" endtime="20220630 17:12:05.826"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.803" endtime="20220630 17:12:05.826"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.827" endtime="20220630 17:12:05.827"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.826" endtime="20220630 17:12:05.827"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.828" endtime="20220630 17:12:05.829"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.828" endtime="20220630 17:12:05.829"/>
</kw>
<tag>Atualizar_Senha_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.766" endtime="20220630 17:12:05.829"/>
</test>
<test id="s1-t16" name="Cenario: Atualizar Privelio Do Usuario" line="131">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.832" level="INFO">${nome} = Noah Lucas</msg>
<status status="PASS" starttime="20220630 17:12:05.831" endtime="20220630 17:12:05.832"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.832" level="INFO">${email} = bradfordtiffany@example.org</msg>
<status status="PASS" starttime="20220630 17:12:05.832" endtime="20220630 17:12:05.832"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.832" level="INFO">${word} = know</msg>
<status status="PASS" starttime="20220630 17:12:05.832" endtime="20220630 17:12:05.832"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.833" level="INFO">${email} = knowbradfordtiffany@example.org</msg>
<status status="PASS" starttime="20220630 17:12:05.832" endtime="20220630 17:12:05.833"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.833" level="INFO">${senha} = F&amp;7)5E#pAT</msg>
<status status="PASS" starttime="20220630 17:12:05.833" endtime="20220630 17:12:05.833"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.833" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.833" endtime="20220630 17:12:05.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.834" level="INFO">&amp;{usuario} = { nome=Noah Lucas | email=knowbradfordtiffany@example.org | password=F&amp;7)5E#pAT | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.833" endtime="20220630 17:12:05.834"/>
</kw>
<msg timestamp="20220630 17:12:05.834" level="INFO">${usuario} = {'nome': 'Noah Lucas', 'email': 'knowbradfordtiffany@example.org', 'password': 'F&amp;7)5E#pAT', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.831" endtime="20220630 17:12:05.834"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.834" endtime="20220630 17:12:05.834"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.856" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '118', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Noah Lucas", "email": "knowbradfordtiffany@example.org", "password": "F&amp;7)5E#pAT", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.856" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b5752b0d-eb97-48a1-93a4-332a544bf08f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ND59kdcDeplZMvKW"
} 
 </msg>
<msg timestamp="20220630 17:12:05.856" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.835" endtime="20220630 17:12:05.856"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.856" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.856" endtime="20220630 17:12:05.857"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.859" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ND59kdcDeplZMvKW'}</msg>
<status status="PASS" starttime="20220630 17:12:05.857" endtime="20220630 17:12:05.859"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.834" endtime="20220630 17:12:05.859"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.860" endtime="20220630 17:12:05.860"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.859" endtime="20220630 17:12:05.861"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.861" endtime="20220630 17:12:05.862"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.861" endtime="20220630 17:12:05.862"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.863" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.862" endtime="20220630 17:12:05.863"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.863" endtime="20220630 17:12:05.863"/>
</kw>
<msg timestamp="20220630 17:12:05.864" level="INFO">${usuario} = {'nome': 'Noah Lucas', 'email': 'knowbradfordtiffany@example.org', 'password': 'F&amp;7)5E#pAT', 'administrador': 'false', '_id': 'ND59kdcDeplZMvKW'}</msg>
<status status="PASS" starttime="20220630 17:12:05.831" endtime="20220630 17:12:05.864"/>
</kw>
<kw name="Alterar Privilegio do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar Privilegio do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Convert To Title Case" library="String">
<var>${administrador}</var>
<arg>${usuario['administrador']}</arg>
<doc>Converts string to title case.</doc>
<msg timestamp="20220630 17:12:05.865" level="INFO">${administrador} = False</msg>
<status status="PASS" starttime="20220630 17:12:05.864" endtime="20220630 17:12:05.865"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${administrador}</var>
<arg>${administrador}== False</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220630 17:12:05.865" level="INFO">${administrador} = True</msg>
<status status="PASS" starttime="20220630 17:12:05.865" endtime="20220630 17:12:05.865"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${administrador}</var>
<arg>${administrador}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20220630 17:12:05.866" level="INFO">${administrador} = True</msg>
<status status="PASS" starttime="20220630 17:12:05.865" endtime="20220630 17:12:05.866"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${administrador}</var>
<arg>${administrador}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20220630 17:12:05.866" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220630 17:12:05.866" endtime="20220630 17:12:05.866"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>administrador=${administrador}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.866" endtime="20220630 17:12:05.866"/>
</kw>
<msg timestamp="20220630 17:12:05.866" level="INFO">${usuario} = {'nome': 'Noah Lucas', 'email': 'knowbradfordtiffany@example.org', 'password': 'F&amp;7)5E#pAT', 'administrador': 'true', '_id': 'ND59kdcDeplZMvKW'}</msg>
<status status="PASS" starttime="20220630 17:12:05.864" endtime="20220630 17:12:05.866"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220630 17:12:05.868" level="INFO">Removed item with key '_id' and value 'ND59kdcDeplZMvKW'.</msg>
<status status="PASS" starttime="20220630 17:12:05.868" endtime="20220630 17:12:05.868"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.867" endtime="20220630 17:12:05.868"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.891" level="INFO">PUT Request : url=http://localhost:3000/usuarios/ND59kdcDeplZMvKW 
 path_url=/usuarios/ND59kdcDeplZMvKW 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '117', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Noah Lucas", "email": "knowbradfordtiffany@example.org", "password": "F&amp;7)5E#pAT", "administrador": "true"}' 
 </msg>
<msg timestamp="20220630 17:12:05.891" level="INFO">PUT Response : url=http://localhost:3000/usuarios/ND59kdcDeplZMvKW 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'abd72541-f7e6-4fb1-ac7d-9ea1e6c0772b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220630 17:12:05.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.868" endtime="20220630 17:12:05.891"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.892" endtime="20220630 17:12:05.892"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.892" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220630 17:12:05.892" endtime="20220630 17:12:05.893"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.867" endtime="20220630 17:12:05.893"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.894" endtime="20220630 17:12:05.894"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.893" endtime="20220630 17:12:05.894"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.895" endtime="20220630 17:12:05.896"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.895" endtime="20220630 17:12:05.896"/>
</kw>
<tag>Atualizar_Privelio_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.830" endtime="20220630 17:12:05.896"/>
</test>
<test id="s1-t17" name="Cenario: Deletar Usuario Cadastrado" line="142">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220630 17:12:05.899" level="INFO">${nome} = Ryan Phillips</msg>
<status status="PASS" starttime="20220630 17:12:05.898" endtime="20220630 17:12:05.899"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220630 17:12:05.899" level="INFO">${email} = michaeljones@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.899" endtime="20220630 17:12:05.899"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220630 17:12:05.899" level="INFO">${word} = music</msg>
<status status="PASS" starttime="20220630 17:12:05.899" endtime="20220630 17:12:05.899"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 17:12:05.900" level="INFO">${email} = musicmichaeljones@example.net</msg>
<status status="PASS" starttime="20220630 17:12:05.899" endtime="20220630 17:12:05.900"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220630 17:12:05.900" level="INFO">${senha} = !SR369Mmm(</msg>
<status status="PASS" starttime="20220630 17:12:05.900" endtime="20220630 17:12:05.900"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220630 17:12:05.900" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220630 17:12:05.900" endtime="20220630 17:12:05.900"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220630 17:12:05.901" level="INFO">&amp;{usuario} = { nome=Ryan Phillips | email=musicmichaeljones@example.net | password=!SR369Mmm( | administrador=false }</msg>
<status status="PASS" starttime="20220630 17:12:05.900" endtime="20220630 17:12:05.901"/>
</kw>
<msg timestamp="20220630 17:12:05.901" level="INFO">${usuario} = {'nome': 'Ryan Phillips', 'email': 'musicmichaeljones@example.net', 'password': '!SR369Mmm(', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220630 17:12:05.898" endtime="20220630 17:12:05.901"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220630 17:12:05.901" endtime="20220630 17:12:05.902"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.923" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Ryan Phillips", "email": "musicmichaeljones@example.net", "password": "!SR369Mmm(", "administrador": "false"}' 
 </msg>
<msg timestamp="20220630 17:12:05.923" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e2693a47-1f46-4000-b9e2-0d4e4aae6903', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "WK3kDe0jO2QWm7GS"
} 
 </msg>
<msg timestamp="20220630 17:12:05.923" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.902" endtime="20220630 17:12:05.923"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.924" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.923" endtime="20220630 17:12:05.924"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.925" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'WK3kDe0jO2QWm7GS'}</msg>
<status status="PASS" starttime="20220630 17:12:05.924" endtime="20220630 17:12:05.925"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.901" endtime="20220630 17:12:05.925"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.926" endtime="20220630 17:12:05.927"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.926" endtime="20220630 17:12:05.927"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.928" endtime="20220630 17:12:05.929"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.927" endtime="20220630 17:12:05.929"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220630 17:12:05.929" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220630 17:12:05.929" endtime="20220630 17:12:05.929"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 17:12:05.929" endtime="20220630 17:12:05.930"/>
</kw>
<msg timestamp="20220630 17:12:05.930" level="INFO">${usuario} = {'nome': 'Ryan Phillips', 'email': 'musicmichaeljones@example.net', 'password': '!SR369Mmm(', 'administrador': 'false', '_id': 'WK3kDe0jO2QWm7GS'}</msg>
<status status="PASS" starttime="20220630 17:12:05.898" endtime="20220630 17:12:05.936"/>
</kw>
<kw name="DELETE Endpoint &quot;/usuarios/${usuario['_id']}&quot;" library="common" sourcename="DELETE Endpoint &quot;${endpoint}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.958" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/WK3kDe0jO2QWm7GS 
 path_url=/usuarios/WK3kDe0jO2QWm7GS 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220630 17:12:05.958" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/WK3kDe0jO2QWm7GS 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'decdb260-b48e-4109-8ebf-9d4dfef1bde1', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20220630 17:12:05.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.937" endtime="20220630 17:12:05.958"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.958" endtime="20220630 17:12:05.959"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.959" level="INFO">${response_body} = {'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20220630 17:12:05.959" endtime="20220630 17:12:05.960"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.936" endtime="20220630 17:12:05.960"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.960" endtime="20220630 17:12:05.961"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.960" endtime="20220630 17:12:05.961"/>
</kw>
<kw name="Validar Mensagem &quot;Registro excluído com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.962" endtime="20220630 17:12:05.962"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.962" endtime="20220630 17:12:05.962"/>
</kw>
<kw name="Validar Se O Usuario Foi Removido &quot;${usuario['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Se O Usuario Foi Removido &quot;${usuario['_id']}&quot;">
<kw name="GET Endpoint &quot;/usuarios/${usuario['_id']}&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.966" level="INFO">GET Request : url=http://localhost:3000/usuarios/WK3kDe0jO2QWm7GS 
 path_url=/usuarios/WK3kDe0jO2QWm7GS 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220630 17:12:05.966" level="INFO">GET Response : url=http://localhost:3000/usuarios/WK3kDe0jO2QWm7GS 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b4891042-d9f0-4cc0-9b72-d786293e72b7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg timestamp="20220630 17:12:05.966" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.964" endtime="20220630 17:12:05.966"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.967" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.967" endtime="20220630 17:12:05.967"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.967" level="INFO">${response_body} = {'message': 'Usuário não encontrado'}</msg>
<status status="PASS" starttime="20220630 17:12:05.967" endtime="20220630 17:12:05.967"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.963" endtime="20220630 17:12:05.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>Usuário não encontrado</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.968" endtime="20220630 17:12:05.968"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.963" endtime="20220630 17:12:05.968"/>
</kw>
<tag>Deletar_Usuario_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.897" endtime="20220630 17:12:05.969"/>
</test>
<test id="s1-t18" name="Cenario: Deletar Usuario Nao Cadastrado" line="151">
<kw name="DELETE Endpoint &quot;/usuarios/${usuario_nao_cadastrado}&quot;" library="common" sourcename="DELETE Endpoint &quot;${endpoint}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220630 17:12:05.974" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/NaoExisto 
 path_url=/usuarios/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220630 17:12:05.974" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/NaoExisto 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd685150f-16f0-4755-9892-5a11786ac6d0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Thu, 30 Jun 2022 20:12:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20220630 17:12:05.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.971" endtime="20220630 17:12:05.974"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220630 17:12:05.974" endtime="20220630 17:12:05.975"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220630 17:12:05.976" level="INFO">${response_body} = {'message': 'Nenhum registro excluído'}</msg>
<status status="PASS" starttime="20220630 17:12:05.975" endtime="20220630 17:12:05.976"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.970" endtime="20220630 17:12:05.976"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220630 17:12:05.976" endtime="20220630 17:12:05.977"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.976" endtime="20220630 17:12:05.977"/>
</kw>
<kw name="Validar Mensagem &quot;Nenhum registro excluído&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220630 17:12:05.978" endtime="20220630 17:12:05.979"/>
</kw>
<status status="PASS" starttime="20220630 17:12:05.978" endtime="20220630 17:12:05.979"/>
</kw>
<tag>Deletar_Usuario_Nao_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220630 17:12:05.970" endtime="20220630 17:12:05.979"/>
</test>
<doc>Arquivo De Testes Relacionandos Ao EndPoint Usuarios</doc>
<status status="PASS" starttime="20220630 17:12:04.528" endtime="20220630 17:12:05.981"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Atualizar_Dados_Usuario_Nao_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Email_Usuario</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Nome_Usuario</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Privelio_Usuario</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Senha_Usuario</stat>
<stat pass="1" fail="0" skip="0">Buscar_Todos_Usuarios</stat>
<stat pass="1" fail="0" skip="0">Buscar_Usuario_Invalido</stat>
<stat pass="1" fail="0" skip="0">Buscar_Usuario_Valido_Administrador</stat>
<stat pass="1" fail="0" skip="0">Buscar_Usuario_Valido_Nao_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Email_Ja_Utilizado</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Email</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Nome</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Senha</stat>
<stat pass="1" fail="0" skip="0">Deletar_Usuario_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Deletar_Usuario_Nao_Cadastrado</stat>
<stat pass="2" fail="0" skip="0">DELETE</stat>
<stat pass="2" fail="0" skip="0">DELETE_Usuarios</stat>
<stat pass="4" fail="0" skip="0">GET</stat>
<stat pass="4" fail="0" skip="0">GET_Usuarios</stat>
<stat pass="7" fail="0" skip="0">POST</stat>
<stat pass="7" fail="0" skip="0">POST_Usuarios</stat>
<stat pass="5" fail="0" skip="0">PUT</stat>
<stat pass="5" fail="0" skip="0">PUT_Usuarios</stat>
<stat pass="18" fail="0" skip="0">Usuarios</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="02 Usuarios Tests">02 Usuarios Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
