<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.4 on win32)" generated="20220701 16:41:56.232" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\tests">
<suite id="s1-s1" name="02 Usuarios Tests" source="C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\tests\02_usuarios_tests.robot">
<kw name="Criar Sessao" library="common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${BASE_URI}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220701 16:41:56.887" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220701 16:41:56.887" endtime="20220701 16:41:56.887"/>
</kw>
<status status="PASS" starttime="20220701 16:41:56.886" endtime="20220701 16:41:56.887"/>
</kw>
<test id="s1-s1-t1" name="Cenario: Listar Todos Os Usuarios Cadastrados" line="12">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:56.889" level="INFO">${nome} = Ralph Hart</msg>
<status status="PASS" starttime="20220701 16:41:56.889" endtime="20220701 16:41:56.889"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:56.890" level="INFO">${email} = michaelball@example.net</msg>
<status status="PASS" starttime="20220701 16:41:56.890" endtime="20220701 16:41:56.890"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:56.891" level="INFO">${word} = just</msg>
<status status="PASS" starttime="20220701 16:41:56.890" endtime="20220701 16:41:56.891"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:56.891" level="INFO">${email} = justmichaelball@example.net</msg>
<status status="PASS" starttime="20220701 16:41:56.891" endtime="20220701 16:41:56.891"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:56.891" level="INFO">${senha} = !9MEpUeyAZ</msg>
<status status="PASS" starttime="20220701 16:41:56.891" endtime="20220701 16:41:56.891"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:56.892" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:56.892" endtime="20220701 16:41:56.892"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:56.893" level="INFO">&amp;{usuario} = { nome=Ralph Hart | email=justmichaelball@example.net | password=!9MEpUeyAZ | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:56.892" endtime="20220701 16:41:56.893"/>
</kw>
<msg timestamp="20220701 16:41:56.893" level="INFO">${usuario} = {'nome': 'Ralph Hart', 'email': 'justmichaelball@example.net', 'password': '!9MEpUeyAZ', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:56.889" endtime="20220701 16:41:56.893"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:56.894" endtime="20220701 16:41:56.894"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:56.960" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '114', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Ralph Hart", "email": "justmichaelball@example.net", "password": "!9MEpUeyAZ", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:56.960" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7e0dc4b5-e876-45cc-9b6b-0d24a2bb50a3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:56 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "IUboS0RH65MB2VM6"
} 
 </msg>
<msg timestamp="20220701 16:41:56.960" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:56.894" endtime="20220701 16:41:56.960"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:56.961" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:56.961" endtime="20220701 16:41:56.961"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:56.962" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'IUboS0RH65MB2VM6'}</msg>
<status status="PASS" starttime="20220701 16:41:56.961" endtime="20220701 16:41:56.962"/>
</kw>
<status status="PASS" starttime="20220701 16:41:56.893" endtime="20220701 16:41:56.963"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:56.964" endtime="20220701 16:41:56.965"/>
</kw>
<status status="PASS" starttime="20220701 16:41:56.963" endtime="20220701 16:41:56.965"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:56.965" endtime="20220701 16:41:56.966"/>
</kw>
<status status="PASS" starttime="20220701 16:41:56.965" endtime="20220701 16:41:56.966"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:56.967" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:56.966" endtime="20220701 16:41:56.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:56.967" endtime="20220701 16:41:56.967"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:56.968" level="INFO">${usuario_valido} = {'nome': 'Ralph Hart', 'email': 'justmichaelball@example.net', 'password': '!9MEpUeyAZ', 'administrador': 'false', '_id': 'IUboS0RH65MB2VM6'}</msg>
<status status="PASS" starttime="20220701 16:41:56.967" endtime="20220701 16:41:56.968"/>
</kw>
<status status="PASS" starttime="20220701 16:41:56.888" endtime="20220701 16:41:56.968"/>
</kw>
<kw name="Get Endpoint &quot;/usuarios&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.011" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220701 16:41:57.012" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fe5b848b-e8f5-430d-96a8-e33a23e98339', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '831935', 'Date': 'Fri, 01 Jul 2022 19:41:56 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 3728,
    "usuarios": [
        {
            "nome": "Danny Young",
            "email": "hardsnowjessica@example.net",
            "password": "K&amp;72JQKnb!",
            "administrador": "true",
            "_id": "01PzJKKEuex0ZjVb"
        },
        {
            "nome": "Jon Price",
            "email": "occurbrandontownsend@example.org",
            "password": "4q7NMkzo%r",
            "administrador": "true",
            "_id": "02Jn9WKt9sFkW42u"
        },
        {
            "nome": "Timothy Bruce",
            "email": "lowens@example.com",
            "password": "$Q1e(IwExJ",
            "administrador": "false",
            "_id": "02nOKpibBBPhB2GH"
        },
        {
            "nome": "Justin Duke",
            "email": "catchismith@example.com",
            "password": "%2Rtoyn*YA",
            "administrador": "false",
            "_id": "03TvH3Vy0zOONeZu"
        },
        {
            "nome": "Daniel Glover",
            "email": "sufferherrerabrian@example.org",
            "password": "kj5JsklgX&amp;",
            "administrador": "true",
            "_id": "03Z1twy7r9E01AGM"
        },
        {
            "nome": "Abigail Salazar",
            "email": "outjeffrey90@example.net",
            "password": "x#_4JYhNk*",
            "administrador": "true",
            "_id": "049gUg1YnBUuxSRn"
        },
        {
            "nome": "Paul Martinez",
            "email": "growmary43@example.org",
            "password": "@)56D1mZ8k",
            "administrador": "true",
            "_id": "06eNd03pK2Qvql3A"
        },
        {
            "nome": "Curtis Hinton",
            "email": "clearjulie32@example.net",
            "password": "b_65WB*0@j",
            "administrador": "false",
            "_id": "06rCDRgw1BFOSCRe"
        },
        {
            "nome": "Cameron Hodge",
            "email": "causelaurenvilla@example.org",
            "password": "Q86Vn2Peb_",
            "administrador": "true",
            "_id": "06uViKKZ4RGaSf26"
        },
        {
            "nome": "Anne Riley",
            "email": "monthtgarcia@example.com",
            "password": "VBwg5Xp##B",
            "administrador": "true",
            "_id": "075HjU7bsOCtLRaP"
        },
        {
            "nome": "Jay Riley MD",
            "email": "beddenisesanchez@example.com",
            "password": "QMH5NRi8+!",
            "administrador": "true",
            "_id": "07GKMhvI14Tt9l09"
        },
        {
            "nome": "Daniel Lynn",
            "email": "qcarter@example.net",
            "password": "z$P5N*tssD",
            "administrador": "true",
            "_id": "07ugyqqb8CuCUqtA"
        },
        {
            "nome": "Melissa Cook MD",
            "email": "sendballlori@example.net",
            "password": "E!4kKk0cqy",
            "administrador": "false",
            "_id": "07xVCDV80s4BGfZY"
        },
        {
            "nome": "Nicholas Brown",
            "email": "technologyksanchez@example.net",
            "password": "^3sBNspvDu",
            "administrador": "false",
            "_id": "08RfaOMyXfauOqoS"
        },
        {
            "nome": "Amy Ayala",
            "email": "blackchristine@example.org",
            "password": "qv6$O0+wP&amp;",
            "administrador": "false",
            "_id": "08VbloP2ksV5nWDT"
        },
        {
            "nome": "Mallory Patel",
            "email": "shortdennishartman@example.com",
            "password": "wc1XSv)H*e",
            "administrador": "true",
            "_id": "08tSx8wTA6GRMBRR"
        },
        {
            "nome": "James Williams",
            "email": "notxguerrero@example.net",
            "password": "@hRu17KoTp",
            "administrador": "true",
            "_id": "09g5WYy8jbzxrPl3"
        },
        {
            "nome": "Kathleen Webb",
            "email": "healthscottrichardson@example.com",
            "password": "!NzITeP)n3",
            "administrador": "true",
            "_id": "0AIZ6wWrSzCHyOrl"
        },
        {
            "nome": "Johnathan Wood",
            "email": "eveningkristinroth@example.com",
            "password": "L0KXcRs$+q",
            "administrador": "true",
            "_id": "0BCZDzp4CawlYUhJ"
        },
        {
            "nome": "Zachary Gallagher",
            "email": "costjared20@example.org",
            "password": "Os35Vbvj4@",
            "administrador": "true",
            "_id": "0BxorwTrl8E5SfNn"
        },
        {
            "nome": "Elizabeth Sanchez",
            "email": "emily39@example.com",
            "password": "$gAon3Nf5i",
            "administrador": "false",
            "_id": "0DKjKENYHU0cGqVW"
        },
        {
            "nome": "Lisa Johnson",
            "email": "likelymartineztony@example.org",
            "password": "P&amp;xtO6deUK",
            "administrador": "false",
            "_id": "0DRRiDR9Xj6tNJso"
        },
        {
            "nome": "Kelsey Jackson",
            "email": "costlunalouis@example.org",
            "password": "&amp;(g8iYuCO5",
            "administrador": "true",
            "_id": "0EZfwjg2ib4GGGEC"
        },
        {
            "nome": "Stephen Smith",
            "email": "receivejoshuahughes@example.com",
            "password": "DF80GZbp(g",
            "administrador": "false",
            "_id": "0EjRyY78b8laLPaz"
        },
        {
            "nome": "Darlene Barrett",
            "email": "picklmejia@example.net",
            "password": "sJHoCgeX@6",
            "administrador": "true",
            "_id": "0H3tTQ9zpFwt1FD3"
        },
        {
            "nome": "Jesse Randolph",
            "email": "john38@example.com",
            "password": "(@04q(nu2Z",
            "administrador": "true",
            "_id": "0HJR2mnfPjOIfbBX"
        },
        {
            "nome": "Michael Hunter",
            "email": "attentionhreyes@example.org",
            "password": "q4@(4tJoG@",
            "administrador": "false",
            "_id": "0HdIPpBH2CA9lFup"
        },
        {
            "nome": "Kristina Jackson",
            "email": "billjacksonmichelle@example.net",
            "password": "hi6np3Fx++",
            "administrador": "true",
            "_id": "0HgPe4VQwDtvR0Uh"
        },
        {
            "nome": "Mark Woods",
            "email": "institutionmanuel74@example.net",
            "password": "F(@k1AelWc",
            "administrador": "true",
            "_id": "0I7kRcVmZmk44NKp"
        },
        {
            "nome": "Corey Jones",
            "email": "edgeamoore@example.net",
            "password": "iqP(hvEk^8",
            "administrador": "false",
            "_id": "0MLnhXHmiha8c7Rf"
        },
        {
            "nome": "Sharon Hanson",
            "email": "computerlaura57@example.net",
            "password": "t@5&amp;Hi0IOM",
            "administrador": "false",
            "_id": "0N9J2RjGIwpYAEoC"
        },
        {
            "nome": "Melissa Taylor",
            "email": "windgeorge78@example.com",
            "password": "qNcw7Uec)1",
            "administrador": "true",
            "_id": "0OaefB8OUP7hbGI3"
        },
        {
            "nome": "Jeffrey Cannon",
            "email": "cutksmith@example.org",
            "password": "q23jOZN7^w",
            "administrador": "true",
            "_id": "0OhdUuEPbUh5DgF0"
        },
        {
            "nome": "Rebecca Potts",
            "email": "sciencedavid06@example.net",
            "password": "q1%S2N)w)f",
            "administrador": "false",
            "_id": "0P9s3Qz3XWjwwlir"
        },
        {
            "nome": "Dennis Campos",
            "email": "dennis79@example.net",
            "password": "jf3IjiWA^!",
            "administrador": "true",
            "_id": "0PRk4qZzrmzRwHPH"
        },
        {
            "nome": "Randy Sullivan",
            "email": "themselveswlee@example.org",
            "password": "W)&amp;u*Ett)2",
            "administrador": "true",
            "_id": "0Q2Cnd9d1hiE9gdt"
        },
        {
            "nome": "George Miller",
            "email": "brownmichael@example.com",
            "password": "*)6SYll0+3",
            "administrador": "true",
            "_id": "0RFCJDebA4d6gkyE"
        },
        {
            "nome": "Taylor Collins",
            "email": "james03@example.net",
            "password": "oj_n84Uu_j",
            "administrador": "true",
            "_id": "0SVFb81oVP649Wfx"
        },
        {
            "nome": "Danny Hughes",
            "email": "performmhouse@example.net",
            "password": "$4@L*ff6$H",
            "administrador": "true",
            "_id": "0SzEDD1aP7RDDvWx"
        },
        {
            "nome": "Chase Howard",
            "email": "sufferhollowayjessica@example.com",
            "password": "(Lx5SEqdIw",
            "administrador": "true",
            "_id": "0TIh1P895d5zYRBb"
        },
        {
            "nome": "Mary Vance",
            "email": "likelyhadkins@example.net",
            "password": "JdZQfQ0b@7",
            "administrador": "true",
            "_id": "0TjA2OCctRABTuTk"
        },
        {
            "nome": "Deborah Wu",
            "email": "storesydney06@example.com",
            "password": "9liTZVja%z",
            "administrador": "true",
            "_id": "0ZELIJDBT8xptGZN"
        },
        {
            "nome": "Margaret Estrada",
            "email": "jeromeholland@example.net",
            "password": "@DYi1AlWa6",
            "administrador": "false",
            "_id": "0bA5LbA3QRV5tpUT"
        },
        {
            "nome": "Abigail Thomas",
            "email": "fathernicolefarmer@example.org",
            "password": "a$81Zlfm((",
            "administrador": "false",
            "_id": "0bbafDKRd3B9dbTu"
        },
        {
            "nome": "Pamela Caldwell",
            "email": "playnolancarla@example.com",
            "password": "($hNFWhtJ5",
            "administrador": "true",
            "_id":... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220701 16:41:57.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:56.969" endtime="20220701 16:41:57.013"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.013" endtime="20220701 16:41:57.013"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.024" level="INFO">${response_body} = {'quantidade': 3728, 'usuarios': [{'nome': 'Danny Young', 'email': 'hardsnowjessica@example.net', 'password': 'K&amp;72JQKnb!', 'administrador': 'true', '_id': '01PzJKKEuex0ZjVb'}, {'nome': 'Jon Price', '...</msg>
<status status="PASS" starttime="20220701 16:41:57.014" endtime="20220701 16:41:57.024"/>
</kw>
<status status="PASS" starttime="20220701 16:41:56.969" endtime="20220701 16:41:57.024"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.025" endtime="20220701 16:41:57.027"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.025" endtime="20220701 16:41:57.027"/>
</kw>
<kw name="Validar Quantidade De Usuarios &gt; 0" library="common" sourcename="Validar Quantidade De ${item} ${operador} ${quantidade}">
<kw name="Should Be True" library="BuiltIn">
<arg>${response_body['quantidade']} ${operador} ${quantidade}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.028" endtime="20220701 16:41:57.030"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.028" endtime="20220701 16:41:57.030"/>
</kw>
<tag>Buscar_Todos_Usuarios</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220701 16:41:56.888" endtime="20220701 16:41:57.030"/>
</test>
<test id="s1-s1-t2" name="Cenario: Buscar Usuario Por ID Valido Nao Administrador" line="19">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario_valido}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.033" level="INFO">${nome} = Kenneth Williams</msg>
<status status="PASS" starttime="20220701 16:41:57.032" endtime="20220701 16:41:57.033"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.033" level="INFO">${email} = torressusan@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.033" endtime="20220701 16:41:57.033"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.034" level="INFO">${word} = minute</msg>
<status status="PASS" starttime="20220701 16:41:57.034" endtime="20220701 16:41:57.034"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.034" level="INFO">${email} = minutetorressusan@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.034" endtime="20220701 16:41:57.034"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.035" level="INFO">${senha} = ^w20!iEd7v</msg>
<status status="PASS" starttime="20220701 16:41:57.034" endtime="20220701 16:41:57.035"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.035" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.035" endtime="20220701 16:41:57.035"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.036" level="INFO">&amp;{usuario} = { nome=Kenneth Williams | email=minutetorressusan@example.net | password=^w20!iEd7v | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.035" endtime="20220701 16:41:57.036"/>
</kw>
<msg timestamp="20220701 16:41:57.036" level="INFO">${usuario} = {'nome': 'Kenneth Williams', 'email': 'minutetorressusan@example.net', 'password': '^w20!iEd7v', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.032" endtime="20220701 16:41:57.036"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.037" endtime="20220701 16:41:57.037"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.066" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '122', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Kenneth Williams", "email": "minutetorressusan@example.net", "password": "^w20!iEd7v", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.066" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5f076abe-083e-4e62-aeeb-4da468e64698', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "y7LFogdVNhMKwzii"
} 
 </msg>
<msg timestamp="20220701 16:41:57.067" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.037" endtime="20220701 16:41:57.067"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.067" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.067" endtime="20220701 16:41:57.067"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.069" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'y7LFogdVNhMKwzii'}</msg>
<status status="PASS" starttime="20220701 16:41:57.067" endtime="20220701 16:41:57.069"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.036" endtime="20220701 16:41:57.069"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.069" endtime="20220701 16:41:57.070"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.069" endtime="20220701 16:41:57.070"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.071" endtime="20220701 16:41:57.072"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.071" endtime="20220701 16:41:57.072"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.073" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.072" endtime="20220701 16:41:57.073"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.073" endtime="20220701 16:41:57.074"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.076" level="INFO">${usuario_valido} = {'nome': 'Kenneth Williams', 'email': 'minutetorressusan@example.net', 'password': '^w20!iEd7v', 'administrador': 'false', '_id': 'y7LFogdVNhMKwzii'}</msg>
<status status="PASS" starttime="20220701 16:41:57.075" endtime="20220701 16:41:57.076"/>
</kw>
<msg timestamp="20220701 16:41:57.077" level="INFO">${usuario_valido} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.032" endtime="20220701 16:41:57.077"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario_valido['_id']}&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<msg timestamp="20220701 16:41:57.078" level="FAIL">Resolving variable '${usuario_valido['_id']}' failed: TypeError: 'NoneType' object is not subscriptable</msg>
<status status="FAIL" starttime="20220701 16:41:57.077" endtime="20220701 16:41:57.078"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.079" endtime="20220701 16:41:57.079"/>
</kw>
<kw name="Validar Usuario &quot;${usuario_valido['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Usuario &quot;${id_usuario_cadastrado}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.079" endtime="20220701 16:41:57.079"/>
</kw>
<tag>Buscar_Usuario_Valido_Nao_Administrador</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.031" endtime="20220701 16:41:57.080">Resolving variable '${usuario_valido['_id']}' failed: TypeError: 'NoneType' object is not subscriptable</status>
</test>
<test id="s1-s1-t3" name="Cenario: Buscar Usuario Por ID Valido Administrador" line="26">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario_valido}</var>
<arg>"Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.082" level="INFO">${nome} = Kevin Smith</msg>
<status status="PASS" starttime="20220701 16:41:57.082" endtime="20220701 16:41:57.082"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.083" level="INFO">${email} = morganamanda@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.082" endtime="20220701 16:41:57.083"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.083" level="INFO">${word} = end</msg>
<status status="PASS" starttime="20220701 16:41:57.083" endtime="20220701 16:41:57.083"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.084" level="INFO">${email} = endmorganamanda@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.083" endtime="20220701 16:41:57.084"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.084" level="INFO">${senha} = $otOMenx(3</msg>
<status status="PASS" starttime="20220701 16:41:57.084" endtime="20220701 16:41:57.084"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.085" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220701 16:41:57.084" endtime="20220701 16:41:57.085"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.085" level="INFO">&amp;{usuario} = { nome=Kevin Smith | email=endmorganamanda@example.net | password=$otOMenx(3 | administrador=true }</msg>
<status status="PASS" starttime="20220701 16:41:57.085" endtime="20220701 16:41:57.085"/>
</kw>
<msg timestamp="20220701 16:41:57.085" level="INFO">${usuario} = {'nome': 'Kevin Smith', 'email': 'endmorganamanda@example.net', 'password': '$otOMenx(3', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220701 16:41:57.081" endtime="20220701 16:41:57.085"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.086" endtime="20220701 16:41:57.089"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.118" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '114', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Kevin Smith", "email": "endmorganamanda@example.net", "password": "$otOMenx(3", "administrador": "true"}' 
 </msg>
<msg timestamp="20220701 16:41:57.118" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd4020d96-e6c0-4839-bcbe-bdfb631fb6b6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Z1f6gSDisSSaIQ42"
} 
 </msg>
<msg timestamp="20220701 16:41:57.118" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.089" endtime="20220701 16:41:57.118"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.119" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.119" endtime="20220701 16:41:57.119"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.120" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'Z1f6gSDisSSaIQ42'}</msg>
<status status="PASS" starttime="20220701 16:41:57.119" endtime="20220701 16:41:57.121"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.086" endtime="20220701 16:41:57.121"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.121" endtime="20220701 16:41:57.123"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.121" endtime="20220701 16:41:57.123"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.124" endtime="20220701 16:41:57.125"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.124" endtime="20220701 16:41:57.125"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.126" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.125" endtime="20220701 16:41:57.126"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.126" endtime="20220701 16:41:57.127"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.128" level="INFO">${usuario_valido} = {'nome': 'Kevin Smith', 'email': 'endmorganamanda@example.net', 'password': '$otOMenx(3', 'administrador': 'true', '_id': 'Z1f6gSDisSSaIQ42'}</msg>
<status status="PASS" starttime="20220701 16:41:57.127" endtime="20220701 16:41:57.128"/>
</kw>
<msg timestamp="20220701 16:41:57.128" level="INFO">${usuario_valido} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.081" endtime="20220701 16:41:57.128"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario_valido['_id']}&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<msg timestamp="20220701 16:41:57.129" level="FAIL">Resolving variable '${usuario_valido['_id']}' failed: TypeError: 'NoneType' object is not subscriptable</msg>
<status status="FAIL" starttime="20220701 16:41:57.128" endtime="20220701 16:41:57.129"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.129" endtime="20220701 16:41:57.130"/>
</kw>
<kw name="Validar Usuario &quot;${usuario_valido['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Usuario &quot;${id_usuario_cadastrado}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.130" endtime="20220701 16:41:57.130"/>
</kw>
<tag>Buscar_Usuario_Valido_Administrador</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.080" endtime="20220701 16:41:57.130">Resolving variable '${usuario_valido['_id']}' failed: TypeError: 'NoneType' object is not subscriptable</status>
</test>
<test id="s1-s1-t4" name="Cenario: Buscar Usuario Por Id Invalido" line="33">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_id_invalido</arg>
<doc>Necessita de 2 argumentos o primeiro é o json
e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${json}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220701 16:41:57.132" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220701 16:41:57.132" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220701 16:41:57.132" endtime="20220701 16:41:57.132"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220701 16:41:57.133" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.132" endtime="20220701 16:41:57.133"/>
</kw>
<msg timestamp="20220701 16:41:57.133" level="INFO">${json} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.131" endtime="20220701 16:41:57.133"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${json['${key}']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.135" level="INFO">${usuario_id_invalido} = Invalido</msg>
<status status="PASS" starttime="20220701 16:41:57.133" endtime="20220701 16:41:57.136"/>
</kw>
<msg timestamp="20220701 16:41:57.136" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.131" endtime="20220701 16:41:57.136"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario}&quot;" library="common" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.160" level="INFO">GET Request : url=http://localhost:3000/usuarios/None 
 path_url=/usuarios/None 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220701 16:41:57.160" level="INFO">GET Response : url=http://localhost:3000/usuarios/None 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b066b6f-b2cd-46c4-a5b4-7b369314da3c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg timestamp="20220701 16:41:57.160" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.137" endtime="20220701 16:41:57.160"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.161" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.161" endtime="20220701 16:41:57.161"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.163" level="INFO">${response_body} = {'message': 'Usuário não encontrado'}</msg>
<status status="PASS" starttime="20220701 16:41:57.161" endtime="20220701 16:41:57.163"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.136" endtime="20220701 16:41:57.163"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.164" endtime="20220701 16:41:57.165"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.163" endtime="20220701 16:41:57.166"/>
</kw>
<kw name="Validar Mensagem &quot;Usuário não encontrado&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.166" endtime="20220701 16:41:57.168"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.166" endtime="20220701 16:41:57.168"/>
</kw>
<tag>Buscar_Usuario_Invalido</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220701 16:41:57.131" endtime="20220701 16:41:57.168"/>
</test>
<test id="s1-s1-t5" name="Cenario: Cadastrar Um Usuario Administrador Com Sucesso" line="44">
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>"Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.171" level="INFO">${nome} = Linda Rodriguez</msg>
<status status="PASS" starttime="20220701 16:41:57.170" endtime="20220701 16:41:57.171"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.171" level="INFO">${email} = ewillis@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.171" endtime="20220701 16:41:57.171"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.172" level="INFO">${word} = arrive</msg>
<status status="PASS" starttime="20220701 16:41:57.172" endtime="20220701 16:41:57.172"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.173" level="INFO">${email} = arriveewillis@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.172" endtime="20220701 16:41:57.173"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.174" level="INFO">${senha} = 08O!JBpk(c</msg>
<status status="PASS" starttime="20220701 16:41:57.173" endtime="20220701 16:41:57.174"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.174" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220701 16:41:57.174" endtime="20220701 16:41:57.174"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.176" level="INFO">&amp;{usuario} = { nome=Linda Rodriguez | email=arriveewillis@example.com | password=08O!JBpk(c | administrador=true }</msg>
<status status="PASS" starttime="20220701 16:41:57.175" endtime="20220701 16:41:57.176"/>
</kw>
<msg timestamp="20220701 16:41:57.176" level="INFO">${usuario} = {'nome': 'Linda Rodriguez', 'email': 'arriveewillis@example.com', 'password': '08O!JBpk(c', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220701 16:41:57.169" endtime="20220701 16:41:57.176"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.177" endtime="20220701 16:41:57.178"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.206" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '116', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Linda Rodriguez", "email": "arriveewillis@example.com", "password": "08O!JBpk(c", "administrador": "true"}' 
 </msg>
<msg timestamp="20220701 16:41:57.206" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '027e3ef1-dc16-4581-8e15-0b056ef09ac8', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "wf8bSZRuJUapQ0tF"
} 
 </msg>
<msg timestamp="20220701 16:41:57.206" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.178" endtime="20220701 16:41:57.206"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.207" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.206" endtime="20220701 16:41:57.207"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.208" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'wf8bSZRuJUapQ0tF'}</msg>
<status status="PASS" starttime="20220701 16:41:57.207" endtime="20220701 16:41:57.208"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.176" endtime="20220701 16:41:57.208"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.209" endtime="20220701 16:41:57.210"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.208" endtime="20220701 16:41:57.210"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.210" endtime="20220701 16:41:57.211"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.210" endtime="20220701 16:41:57.211"/>
</kw>
<tag>Cadastrar_Usuario_Administrador</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220701 16:41:57.169" endtime="20220701 16:41:57.211"/>
</test>
<test id="s1-s1-t6" name="Cenario: Cadastrar Um Usuario Nao Administrador Com Sucesso" line="51">
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.214" level="INFO">${nome} = Stacy Henderson</msg>
<status status="PASS" starttime="20220701 16:41:57.213" endtime="20220701 16:41:57.214"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.215" level="INFO">${email} = nelsoncarly@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.214" endtime="20220701 16:41:57.215"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.215" level="INFO">${word} = board</msg>
<status status="PASS" starttime="20220701 16:41:57.215" endtime="20220701 16:41:57.215"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.216" level="INFO">${email} = boardnelsoncarly@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.216" endtime="20220701 16:41:57.216"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.217" level="INFO">${senha} = !OSH5szh44</msg>
<status status="PASS" starttime="20220701 16:41:57.217" endtime="20220701 16:41:57.217"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.218" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.217" endtime="20220701 16:41:57.218"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.219" level="INFO">&amp;{usuario} = { nome=Stacy Henderson | email=boardnelsoncarly@example.com | password=!OSH5szh44 | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.218" endtime="20220701 16:41:57.219"/>
</kw>
<msg timestamp="20220701 16:41:57.219" level="INFO">${usuario} = {'nome': 'Stacy Henderson', 'email': 'boardnelsoncarly@example.com', 'password': '!OSH5szh44', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.213" endtime="20220701 16:41:57.219"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.220" endtime="20220701 16:41:57.221"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.258" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '120', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Stacy Henderson", "email": "boardnelsoncarly@example.com", "password": "!OSH5szh44", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.258" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c103aeae-3b26-4923-bd72-685e698b89fc', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "16e1JoGEGHzmZPxN"
} 
 </msg>
<msg timestamp="20220701 16:41:57.259" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.221" endtime="20220701 16:41:57.259"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.259" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.259" endtime="20220701 16:41:57.259"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.261" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '16e1JoGEGHzmZPxN'}</msg>
<status status="PASS" starttime="20220701 16:41:57.259" endtime="20220701 16:41:57.261"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.220" endtime="20220701 16:41:57.261"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.261" endtime="20220701 16:41:57.262"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.261" endtime="20220701 16:41:57.262"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.263" endtime="20220701 16:41:57.263"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.262" endtime="20220701 16:41:57.264"/>
</kw>
<tag>Cadastrar_Usuario</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220701 16:41:57.212" endtime="20220701 16:41:57.264"/>
</test>
<test id="s1-s1-t7" name="Cenario: Tentativa de Cadastrar Um Usuario Com Email Ja Cadastrado" line="58">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.266" level="INFO">${nome} = Luis Ray</msg>
<status status="PASS" starttime="20220701 16:41:57.265" endtime="20220701 16:41:57.266"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.266" level="INFO">${email} = frankjackson@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.266" endtime="20220701 16:41:57.266"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.266" level="INFO">${word} = work</msg>
<status status="PASS" starttime="20220701 16:41:57.266" endtime="20220701 16:41:57.266"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.267" level="INFO">${email} = workfrankjackson@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.267" endtime="20220701 16:41:57.267"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.267" level="INFO">${senha} = &amp;!f68YIb&amp;#</msg>
<status status="PASS" starttime="20220701 16:41:57.267" endtime="20220701 16:41:57.267"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.268" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220701 16:41:57.267" endtime="20220701 16:41:57.268"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.269" level="INFO">&amp;{usuario} = { nome=Luis Ray | email=workfrankjackson@example.net | password=&amp;!f68YIb&amp;# | administrador=true }</msg>
<status status="PASS" starttime="20220701 16:41:57.268" endtime="20220701 16:41:57.269"/>
</kw>
<msg timestamp="20220701 16:41:57.269" level="INFO">${usuario} = {'nome': 'Luis Ray', 'email': 'workfrankjackson@example.net', 'password': '&amp;!f68YIb&amp;#', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220701 16:41:57.265" endtime="20220701 16:41:57.269"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.269" endtime="20220701 16:41:57.270"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.303" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Luis Ray", "email": "workfrankjackson@example.net", "password": "&amp;!f68YIb&amp;#", "administrador": "true"}' 
 </msg>
<msg timestamp="20220701 16:41:57.303" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '19f1d448-8866-4b89-92b5-0b1b771e008f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uUp4ILd18WDRVFlR"
} 
 </msg>
<msg timestamp="20220701 16:41:57.303" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.270" endtime="20220701 16:41:57.303"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.304" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.303" endtime="20220701 16:41:57.304"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.305" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'uUp4ILd18WDRVFlR'}</msg>
<status status="PASS" starttime="20220701 16:41:57.304" endtime="20220701 16:41:57.305"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.269" endtime="20220701 16:41:57.305"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.306" endtime="20220701 16:41:57.307"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.305" endtime="20220701 16:41:57.307"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.307" endtime="20220701 16:41:57.308"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.307" endtime="20220701 16:41:57.308"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.309" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.308" endtime="20220701 16:41:57.309"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.309" endtime="20220701 16:41:57.310"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.311" level="INFO">${usuario_valido} = {'nome': 'Luis Ray', 'email': 'workfrankjackson@example.net', 'password': '&amp;!f68YIb&amp;#', 'administrador': 'true', '_id': 'uUp4ILd18WDRVFlR'}</msg>
<status status="PASS" starttime="20220701 16:41:57.310" endtime="20220701 16:41:57.311"/>
</kw>
<msg timestamp="20220701 16:41:57.311" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.264" endtime="20220701 16:41:57.311"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220701 16:41:57.312" level="FAIL">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</msg>
<status status="FAIL" starttime="20220701 16:41:57.311" endtime="20220701 16:41:57.313"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.313" endtime="20220701 16:41:57.314"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.314" endtime="20220701 16:41:57.314"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.314" endtime="20220701 16:41:57.314"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.311" endtime="20220701 16:41:57.315"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.315" endtime="20220701 16:41:57.315"/>
</kw>
<kw name="Validar Mensagem &quot;Este email já está sendo usado&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.315" endtime="20220701 16:41:57.315"/>
</kw>
<tag>Cadastrar_Usuario_Email_Ja_Utilizado</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.264" endtime="20220701 16:41:57.315">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</status>
</test>
<test id="s1-s1-t8" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Nome" line="66">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_nome</arg>
<doc>Necessita de 2 argumentos o primeiro é o json
e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${json}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220701 16:41:57.317" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220701 16:41:57.317" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220701 16:41:57.317" endtime="20220701 16:41:57.317"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220701 16:41:57.318" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.318" endtime="20220701 16:41:57.318"/>
</kw>
<msg timestamp="20220701 16:41:57.318" level="INFO">${json} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.316" endtime="20220701 16:41:57.318"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${json['${key}']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.319" level="INFO">${usuario_sem_nome} = {'email': 'emailAleatorio234747@SuperRandominco.com', 'password': 'SenhaAleatoria', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220701 16:41:57.318" endtime="20220701 16:41:57.320"/>
</kw>
<msg timestamp="20220701 16:41:57.320" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.316" endtime="20220701 16:41:57.320"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220701 16:41:57.321" level="FAIL">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</msg>
<status status="FAIL" starttime="20220701 16:41:57.320" endtime="20220701 16:41:57.321"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.321" endtime="20220701 16:41:57.321"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.322" endtime="20220701 16:41:57.322"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.322" endtime="20220701 16:41:57.322"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.320" endtime="20220701 16:41:57.322"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.323" endtime="20220701 16:41:57.323"/>
</kw>
<kw name="Validar &quot;nome&quot; Com O Valor &quot;nome é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.323" endtime="20220701 16:41:57.323"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Nome</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.316" endtime="20220701 16:41:57.323">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</status>
</test>
<test id="s1-s1-t9" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Email" line="73">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_email</arg>
<doc>Necessita de 2 argumentos o primeiro é o json
e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${json}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220701 16:41:57.325" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220701 16:41:57.326" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220701 16:41:57.325" endtime="20220701 16:41:57.326"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220701 16:41:57.326" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.326" endtime="20220701 16:41:57.326"/>
</kw>
<msg timestamp="20220701 16:41:57.327" level="INFO">${json} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.325" endtime="20220701 16:41:57.327"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${json['${key}']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.328" level="INFO">${usuario_sem_email} = {'nome': 'NomeAleatorio', 'password': 'NaoExisto', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220701 16:41:57.327" endtime="20220701 16:41:57.328"/>
</kw>
<msg timestamp="20220701 16:41:57.328" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.324" endtime="20220701 16:41:57.328"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220701 16:41:57.329" level="FAIL">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</msg>
<status status="FAIL" starttime="20220701 16:41:57.329" endtime="20220701 16:41:57.329"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.330" endtime="20220701 16:41:57.330"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.330" endtime="20220701 16:41:57.330"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.330" endtime="20220701 16:41:57.330"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.328" endtime="20220701 16:41:57.331"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.331" endtime="20220701 16:41:57.331"/>
</kw>
<kw name="Validar &quot;email&quot; Com O Valor &quot;email é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.331" endtime="20220701 16:41:57.331"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Email</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.324" endtime="20220701 16:41:57.332">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</status>
</test>
<test id="s1-s1-t10" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Senha" line="80">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_senha</arg>
<doc>Necessita de 2 argumentos o primeiro é o json
e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${json}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220701 16:41:57.333" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220701 16:41:57.334" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220701 16:41:57.333" endtime="20220701 16:41:57.334"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220701 16:41:57.334" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.334" endtime="20220701 16:41:57.334"/>
</kw>
<msg timestamp="20220701 16:41:57.334" level="INFO">${json} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.333" endtime="20220701 16:41:57.335"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${json['${key}']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.336" level="INFO">${usuario_sem_senha} = {'nome': 'NomeAleatorio', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220701 16:41:57.335" endtime="20220701 16:41:57.336"/>
</kw>
<msg timestamp="20220701 16:41:57.336" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.332" endtime="20220701 16:41:57.336"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220701 16:41:57.337" level="FAIL">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</msg>
<status status="FAIL" starttime="20220701 16:41:57.336" endtime="20220701 16:41:57.337"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.338" endtime="20220701 16:41:57.338"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.338" endtime="20220701 16:41:57.338"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.338" endtime="20220701 16:41:57.338"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.336" endtime="20220701 16:41:57.339"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.339" endtime="20220701 16:41:57.339"/>
</kw>
<kw name="Validar &quot;password&quot; Com O Valor &quot;password é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.339" endtime="20220701 16:41:57.339"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Senha</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.332" endtime="20220701 16:41:57.340">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</status>
</test>
<test id="s1-s1-t11" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Administrador" line="87">
<kw name="Pegar Key Do Json" library="common">
<var>${usuario}</var>
<arg>usuarios.json</arg>
<arg>usuario_sem_administrador</arg>
<doc>Necessita de 2 argumentos o primeiro é o json
e o segundo é a chave que deseja pegar</doc>
<kw name="Importar JSON" library="common">
<var>${json}</var>
<arg>${arquivo}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/static/${arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220701 16:41:57.341" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json"&gt;C:\Users\Cleo\Documents\Python\CleoMaia_Compass_Sprint6\support\fixtures\static\usuarios.json&lt;/a&gt;'.</msg>
<msg timestamp="20220701 16:41:57.342" level="INFO">${arquivo} = {
    "usuario_nao_cadastrado": {
        "nome": "MaisFakeNotaDe3Reais",
        "email": "NuncaSereiCadastrado@NaoExisto.com",
        "password": "NaoExisto",
        "administrador": "true"
    },...</msg>
<status status="PASS" starttime="20220701 16:41:57.341" endtime="20220701 16:41:57.342"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220701 16:41:57.342" level="INFO">${payload} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.342" endtime="20220701 16:41:57.342"/>
</kw>
<msg timestamp="20220701 16:41:57.342" level="INFO">${json} = {'usuario_nao_cadastrado': {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto', 'administrador': 'true'}, 'usuario_sem_nome': {'email': 'emailAleato...</msg>
<status status="PASS" starttime="20220701 16:41:57.341" endtime="20220701 16:41:57.342"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${json['${key}']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.344" level="INFO">${usuario_sem_administrador} = {'nome': 'MaisFakeNotaDe3Reais', 'email': 'NuncaSereiCadastrado@NaoExisto.com', 'password': 'NaoExisto'}</msg>
<status status="PASS" starttime="20220701 16:41:57.343" endtime="20220701 16:41:57.344"/>
</kw>
<msg timestamp="20220701 16:41:57.344" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.340" endtime="20220701 16:41:57.344"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20220701 16:41:57.345" level="FAIL">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</msg>
<status status="FAIL" starttime="20220701 16:41:57.345" endtime="20220701 16:41:57.345"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.346" endtime="20220701 16:41:57.346"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.346" endtime="20220701 16:41:57.346"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.346" endtime="20220701 16:41:57.347"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.344" endtime="20220701 16:41:57.347"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.347" endtime="20220701 16:41:57.347"/>
</kw>
<kw name="Validar &quot;administrador&quot; Com O Valor &quot;administrador é obrigatório&quot;" library="common" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.347" endtime="20220701 16:41:57.348"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Administrador</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.340" endtime="20220701 16:41:57.348">Evaluating expression ''_id' in None' failed: TypeError: argument of type 'NoneType' is not iterable</status>
</test>
<test id="s1-s1-t12" name="Cenerario: Atualizar Dados de Um Usuario Nao Cadastrado" line="98">
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.350" level="INFO">${nome} = Cynthia Jenkins</msg>
<status status="PASS" starttime="20220701 16:41:57.349" endtime="20220701 16:41:57.350"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.350" level="INFO">${email} = edward99@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.350" endtime="20220701 16:41:57.350"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.350" level="INFO">${word} = along</msg>
<status status="PASS" starttime="20220701 16:41:57.350" endtime="20220701 16:41:57.350"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.351" level="INFO">${email} = alongedward99@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.351" endtime="20220701 16:41:57.351"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.351" level="INFO">${senha} = &amp;u3SbQvF%*</msg>
<status status="PASS" starttime="20220701 16:41:57.351" endtime="20220701 16:41:57.351"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.352" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.351" endtime="20220701 16:41:57.352"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.352" level="INFO">&amp;{usuario} = { nome=Cynthia Jenkins | email=alongedward99@example.com | password=&amp;u3SbQvF%* | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.352" endtime="20220701 16:41:57.353"/>
</kw>
<msg timestamp="20220701 16:41:57.353" level="INFO">${usuario} = {'nome': 'Cynthia Jenkins', 'email': 'alongedward99@example.com', 'password': '&amp;u3SbQvF%*', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.349" endtime="20220701 16:41:57.353"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/NaoExisto&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.354" endtime="20220701 16:41:57.354"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.382" level="INFO">PUT Request : url=http://localhost:3000/usuarios/NaoExisto 
 path_url=/usuarios/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '117', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Cynthia Jenkins", "email": "alongedward99@example.com", "password": "&amp;u3SbQvF%*", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.382" level="INFO">PUT Response : url=http://localhost:3000/usuarios/NaoExisto 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ceea400a-7b5b-4f67-9fe3-8aaaa04010b6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "dtlu6IU3w4GlXqKl"
} 
 </msg>
<msg timestamp="20220701 16:41:57.383" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.354" endtime="20220701 16:41:57.383"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.383" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.383" endtime="20220701 16:41:57.383"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.385" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'dtlu6IU3w4GlXqKl'}</msg>
<status status="PASS" starttime="20220701 16:41:57.384" endtime="20220701 16:41:57.385"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.353" endtime="20220701 16:41:57.385"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.386" endtime="20220701 16:41:57.387"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.385" endtime="20220701 16:41:57.387"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.387" endtime="20220701 16:41:57.388"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.387" endtime="20220701 16:41:57.388"/>
</kw>
<tag>Atualizar_Dados_Usuario_Nao_Cadastrado</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220701 16:41:57.348" endtime="20220701 16:41:57.388"/>
</test>
<test id="s1-s1-t13" name="Cenario: Atualizar Nome Do Usuario" line="105">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.390" level="INFO">${nome} = Timothy Rogers</msg>
<status status="PASS" starttime="20220701 16:41:57.389" endtime="20220701 16:41:57.390"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.390" level="INFO">${email} = harrisonheather@example.org</msg>
<status status="PASS" starttime="20220701 16:41:57.390" endtime="20220701 16:41:57.390"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.391" level="INFO">${word} = operation</msg>
<status status="PASS" starttime="20220701 16:41:57.391" endtime="20220701 16:41:57.391"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.391" level="INFO">${email} = operationharrisonheather@example.org</msg>
<status status="PASS" starttime="20220701 16:41:57.391" endtime="20220701 16:41:57.391"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.392" level="INFO">${senha} = (rouQCo48L</msg>
<status status="PASS" starttime="20220701 16:41:57.391" endtime="20220701 16:41:57.392"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.392" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.392" endtime="20220701 16:41:57.392"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.393" level="INFO">&amp;{usuario} = { nome=Timothy Rogers | email=operationharrisonheather@example.org | password=(rouQCo48L | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.392" endtime="20220701 16:41:57.393"/>
</kw>
<msg timestamp="20220701 16:41:57.393" level="INFO">${usuario} = {'nome': 'Timothy Rogers', 'email': 'operationharrisonheather@example.org', 'password': '(rouQCo48L', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.389" endtime="20220701 16:41:57.393"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.394" endtime="20220701 16:41:57.394"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.443" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '127', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Timothy Rogers", "email": "operationharrisonheather@example.org", "password": "(rouQCo48L", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.443" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ea966486-a5b1-46bf-968c-66a50c2b42d2', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "i1vsA65aMGT6HEvL"
} 
 </msg>
<msg timestamp="20220701 16:41:57.443" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.394" endtime="20220701 16:41:57.443"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.444" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.443" endtime="20220701 16:41:57.444"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.445" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'i1vsA65aMGT6HEvL'}</msg>
<status status="PASS" starttime="20220701 16:41:57.444" endtime="20220701 16:41:57.445"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.393" endtime="20220701 16:41:57.445"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.446" endtime="20220701 16:41:57.447"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.446" endtime="20220701 16:41:57.447"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.448" endtime="20220701 16:41:57.448"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.447" endtime="20220701 16:41:57.448"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.449" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.449" endtime="20220701 16:41:57.449"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.449" endtime="20220701 16:41:57.450"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.451" level="INFO">${usuario_valido} = {'nome': 'Timothy Rogers', 'email': 'operationharrisonheather@example.org', 'password': '(rouQCo48L', 'administrador': 'false', '_id': 'i1vsA65aMGT6HEvL'}</msg>
<status status="PASS" starttime="20220701 16:41:57.450" endtime="20220701 16:41:57.451"/>
</kw>
<msg timestamp="20220701 16:41:57.451" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.389" endtime="20220701 16:41:57.451"/>
</kw>
<kw name="Alterar &quot;nome&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${novo_usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.452" level="INFO">${nome} = Brian Preston</msg>
<status status="PASS" starttime="20220701 16:41:57.452" endtime="20220701 16:41:57.452"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.453" level="INFO">${email} = stephanie02@example.org</msg>
<status status="PASS" starttime="20220701 16:41:57.453" endtime="20220701 16:41:57.453"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.453" level="INFO">${word} = bring</msg>
<status status="PASS" starttime="20220701 16:41:57.453" endtime="20220701 16:41:57.453"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.454" level="INFO">${email} = bringstephanie02@example.org</msg>
<status status="PASS" starttime="20220701 16:41:57.453" endtime="20220701 16:41:57.454"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.454" level="INFO">${senha} = X6KcxhUw^y</msg>
<status status="PASS" starttime="20220701 16:41:57.454" endtime="20220701 16:41:57.454"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.455" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.454" endtime="20220701 16:41:57.455"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.455" level="INFO">&amp;{usuario} = { nome=Brian Preston | email=bringstephanie02@example.org | password=X6KcxhUw^y | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.455" endtime="20220701 16:41:57.455"/>
</kw>
<msg timestamp="20220701 16:41:57.455" level="INFO">${novo_usuario} = {'nome': 'Brian Preston', 'email': 'bringstephanie02@example.org', 'password': 'X6KcxhUw^y', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.452" endtime="20220701 16:41:57.455"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<msg timestamp="20220701 16:41:57.456" level="FAIL">AttributeError: 'NoneType' object has no attribute 'update'</msg>
<status status="FAIL" starttime="20220701 16:41:57.456" endtime="20220701 16:41:57.457"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.451" endtime="20220701 16:41:57.457"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.458" endtime="20220701 16:41:57.458"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.458" endtime="20220701 16:41:57.458"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.458" endtime="20220701 16:41:57.458"/>
</kw>
<tag>Atualizar_Nome_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.388" endtime="20220701 16:41:57.459">AttributeError: 'NoneType' object has no attribute 'update'</status>
</test>
<test id="s1-s1-t14" name="Cenario: Atualizar Email Do Usuario" line="113">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.460" level="INFO">${nome} = James Turner</msg>
<status status="PASS" starttime="20220701 16:41:57.460" endtime="20220701 16:41:57.460"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.461" level="INFO">${email} = johnny42@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.460" endtime="20220701 16:41:57.461"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.461" level="INFO">${word} = country</msg>
<status status="PASS" starttime="20220701 16:41:57.461" endtime="20220701 16:41:57.461"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.462" level="INFO">${email} = countryjohnny42@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.461" endtime="20220701 16:41:57.462"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.462" level="INFO">${senha} = ^8Y3^44rz5</msg>
<status status="PASS" starttime="20220701 16:41:57.462" endtime="20220701 16:41:57.462"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.463" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.462" endtime="20220701 16:41:57.463"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.464" level="INFO">&amp;{usuario} = { nome=James Turner | email=countryjohnny42@example.com | password=^8Y3^44rz5 | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.463" endtime="20220701 16:41:57.464"/>
</kw>
<msg timestamp="20220701 16:41:57.464" level="INFO">${usuario} = {'nome': 'James Turner', 'email': 'countryjohnny42@example.com', 'password': '^8Y3^44rz5', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.460" endtime="20220701 16:41:57.464"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.465" endtime="20220701 16:41:57.465"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.488" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '116', 'Content-Type': 'application/json'} 
 body=b'{"nome": "James Turner", "email": "countryjohnny42@example.com", "password": "^8Y3^44rz5", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.488" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a186304f-55eb-4139-b8c8-3f60d0598a85', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "0LmfRC4KScVPXEXL"
} 
 </msg>
<msg timestamp="20220701 16:41:57.488" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.465" endtime="20220701 16:41:57.488"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.489" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.488" endtime="20220701 16:41:57.489"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.490" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '0LmfRC4KScVPXEXL'}</msg>
<status status="PASS" starttime="20220701 16:41:57.489" endtime="20220701 16:41:57.490"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.464" endtime="20220701 16:41:57.490"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.491" endtime="20220701 16:41:57.492"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.490" endtime="20220701 16:41:57.492"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.492" endtime="20220701 16:41:57.493"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.492" endtime="20220701 16:41:57.493"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.494" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.493" endtime="20220701 16:41:57.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.494" endtime="20220701 16:41:57.495"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.496" level="INFO">${usuario_valido} = {'nome': 'James Turner', 'email': 'countryjohnny42@example.com', 'password': '^8Y3^44rz5', 'administrador': 'false', '_id': '0LmfRC4KScVPXEXL'}</msg>
<status status="PASS" starttime="20220701 16:41:57.495" endtime="20220701 16:41:57.496"/>
</kw>
<msg timestamp="20220701 16:41:57.496" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.459" endtime="20220701 16:41:57.496"/>
</kw>
<kw name="Alterar &quot;email&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${novo_usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.498" level="INFO">${nome} = Shawn Leblanc</msg>
<status status="PASS" starttime="20220701 16:41:57.497" endtime="20220701 16:41:57.498"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.498" level="INFO">${email} = linmary@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.498" endtime="20220701 16:41:57.498"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.499" level="INFO">${word} = bank</msg>
<status status="PASS" starttime="20220701 16:41:57.498" endtime="20220701 16:41:57.499"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.499" level="INFO">${email} = banklinmary@example.net</msg>
<status status="PASS" starttime="20220701 16:41:57.499" endtime="20220701 16:41:57.499"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.500" level="INFO">${senha} = $SuJQuax)2</msg>
<status status="PASS" starttime="20220701 16:41:57.499" endtime="20220701 16:41:57.500"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.500" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.500" endtime="20220701 16:41:57.500"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.501" level="INFO">&amp;{usuario} = { nome=Shawn Leblanc | email=banklinmary@example.net | password=$SuJQuax)2 | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.500" endtime="20220701 16:41:57.501"/>
</kw>
<msg timestamp="20220701 16:41:57.501" level="INFO">${novo_usuario} = {'nome': 'Shawn Leblanc', 'email': 'banklinmary@example.net', 'password': '$SuJQuax)2', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.497" endtime="20220701 16:41:57.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<msg timestamp="20220701 16:41:57.502" level="FAIL">AttributeError: 'NoneType' object has no attribute 'update'</msg>
<status status="FAIL" starttime="20220701 16:41:57.501" endtime="20220701 16:41:57.502"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.497" endtime="20220701 16:41:57.503"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.503" endtime="20220701 16:41:57.503"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.503" endtime="20220701 16:41:57.503"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.504" endtime="20220701 16:41:57.504"/>
</kw>
<tag>Atualizar_Email_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.459" endtime="20220701 16:41:57.504">AttributeError: 'NoneType' object has no attribute 'update'</status>
</test>
<test id="s1-s1-t15" name="Cenario: Atualizar Senha Do Usuario" line="121">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.507" level="INFO">${nome} = Jason Peters</msg>
<status status="PASS" starttime="20220701 16:41:57.506" endtime="20220701 16:41:57.507"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.508" level="INFO">${email} = pamela37@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.507" endtime="20220701 16:41:57.508"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.508" level="INFO">${word} = early</msg>
<status status="PASS" starttime="20220701 16:41:57.508" endtime="20220701 16:41:57.508"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.508" level="INFO">${email} = earlypamela37@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.508" endtime="20220701 16:41:57.508"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.509" level="INFO">${senha} = qA18Lme2_w</msg>
<status status="PASS" starttime="20220701 16:41:57.509" endtime="20220701 16:41:57.509"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.509" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.509" endtime="20220701 16:41:57.509"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.510" level="INFO">&amp;{usuario} = { nome=Jason Peters | email=earlypamela37@example.com | password=qA18Lme2_w | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.509" endtime="20220701 16:41:57.510"/>
</kw>
<msg timestamp="20220701 16:41:57.510" level="INFO">${usuario} = {'nome': 'Jason Peters', 'email': 'earlypamela37@example.com', 'password': 'qA18Lme2_w', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.506" endtime="20220701 16:41:57.510"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.511" endtime="20220701 16:41:57.511"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.554" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '114', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Jason Peters", "email": "earlypamela37@example.com", "password": "qA18Lme2_w", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.554" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f3f4f15a-17ee-455b-8d40-740528458d64', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "F0DuaiNmrt6XgdEO"
} 
 </msg>
<msg timestamp="20220701 16:41:57.554" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.511" endtime="20220701 16:41:57.554"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.554" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.554" endtime="20220701 16:41:57.555"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.556" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'F0DuaiNmrt6XgdEO'}</msg>
<status status="PASS" starttime="20220701 16:41:57.555" endtime="20220701 16:41:57.556"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.510" endtime="20220701 16:41:57.556"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.557" endtime="20220701 16:41:57.558"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.556" endtime="20220701 16:41:57.558"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.558" endtime="20220701 16:41:57.559"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.558" endtime="20220701 16:41:57.559"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.560" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.559" endtime="20220701 16:41:57.560"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.560" endtime="20220701 16:41:57.561"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.562" level="INFO">${usuario_valido} = {'nome': 'Jason Peters', 'email': 'earlypamela37@example.com', 'password': 'qA18Lme2_w', 'administrador': 'false', '_id': 'F0DuaiNmrt6XgdEO'}</msg>
<status status="PASS" starttime="20220701 16:41:57.561" endtime="20220701 16:41:57.562"/>
</kw>
<msg timestamp="20220701 16:41:57.562" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.505" endtime="20220701 16:41:57.562"/>
</kw>
<kw name="Alterar &quot;password&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${novo_usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.563" level="INFO">${nome} = Bryan Odonnell</msg>
<status status="PASS" starttime="20220701 16:41:57.563" endtime="20220701 16:41:57.563"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.564" level="INFO">${email} = evanscharles@example.org</msg>
<status status="PASS" starttime="20220701 16:41:57.563" endtime="20220701 16:41:57.564"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.564" level="INFO">${word} = condition</msg>
<status status="PASS" starttime="20220701 16:41:57.564" endtime="20220701 16:41:57.564"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.565" level="INFO">${email} = conditionevanscharles@example.org</msg>
<status status="PASS" starttime="20220701 16:41:57.564" endtime="20220701 16:41:57.565"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.565" level="INFO">${senha} = (C6QMeCoH*</msg>
<status status="PASS" starttime="20220701 16:41:57.565" endtime="20220701 16:41:57.565"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.565" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.565" endtime="20220701 16:41:57.565"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.566" level="INFO">&amp;{usuario} = { nome=Bryan Odonnell | email=conditionevanscharles@example.org | password=(C6QMeCoH* | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.566" endtime="20220701 16:41:57.566"/>
</kw>
<msg timestamp="20220701 16:41:57.566" level="INFO">${novo_usuario} = {'nome': 'Bryan Odonnell', 'email': 'conditionevanscharles@example.org', 'password': '(C6QMeCoH*', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.562" endtime="20220701 16:41:57.566"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<msg timestamp="20220701 16:41:57.567" level="FAIL">AttributeError: 'NoneType' object has no attribute 'update'</msg>
<status status="FAIL" starttime="20220701 16:41:57.567" endtime="20220701 16:41:57.567"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.562" endtime="20220701 16:41:57.568"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.569" endtime="20220701 16:41:57.569"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.569" endtime="20220701 16:41:57.569"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.569" endtime="20220701 16:41:57.569"/>
</kw>
<tag>Atualizar_Senha_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.505" endtime="20220701 16:41:57.570">AttributeError: 'NoneType' object has no attribute 'update'</status>
</test>
<test id="s1-s1-t16" name="Cenario: Atualizar Privelio Do Usuario" line="129">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.572" level="INFO">${nome} = Destiny French</msg>
<status status="PASS" starttime="20220701 16:41:57.571" endtime="20220701 16:41:57.572"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.572" level="INFO">${email} = heather74@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.572" endtime="20220701 16:41:57.572"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.572" level="INFO">${word} = child</msg>
<status status="PASS" starttime="20220701 16:41:57.572" endtime="20220701 16:41:57.572"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.573" level="INFO">${email} = childheather74@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.573" endtime="20220701 16:41:57.573"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.573" level="INFO">${senha} = Ow1pnEMk+)</msg>
<status status="PASS" starttime="20220701 16:41:57.573" endtime="20220701 16:41:57.573"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.574" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.573" endtime="20220701 16:41:57.574"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.574" level="INFO">&amp;{usuario} = { nome=Destiny French | email=childheather74@example.com | password=Ow1pnEMk+) | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.574" endtime="20220701 16:41:57.574"/>
</kw>
<msg timestamp="20220701 16:41:57.575" level="INFO">${usuario} = {'nome': 'Destiny French', 'email': 'childheather74@example.com', 'password': 'Ow1pnEMk+)', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.571" endtime="20220701 16:41:57.575"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.575" endtime="20220701 16:41:57.575"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.613" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '117', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Destiny French", "email": "childheather74@example.com", "password": "Ow1pnEMk+)", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.613" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c3ca821f-757d-4ed5-a6ba-680fbe16249b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "oyY4BaOjwbq5Fs4I"
} 
 </msg>
<msg timestamp="20220701 16:41:57.613" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.576" endtime="20220701 16:41:57.613"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.614" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.613" endtime="20220701 16:41:57.614"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.615" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'oyY4BaOjwbq5Fs4I'}</msg>
<status status="PASS" starttime="20220701 16:41:57.614" endtime="20220701 16:41:57.615"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.575" endtime="20220701 16:41:57.615"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.616" endtime="20220701 16:41:57.617"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.615" endtime="20220701 16:41:57.617"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.617" endtime="20220701 16:41:57.618"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.617" endtime="20220701 16:41:57.618"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.619" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.618" endtime="20220701 16:41:57.619"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.619" endtime="20220701 16:41:57.620"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.621" level="INFO">${usuario_valido} = {'nome': 'Destiny French', 'email': 'childheather74@example.com', 'password': 'Ow1pnEMk+)', 'administrador': 'false', '_id': 'oyY4BaOjwbq5Fs4I'}</msg>
<status status="PASS" starttime="20220701 16:41:57.620" endtime="20220701 16:41:57.621"/>
</kw>
<msg timestamp="20220701 16:41:57.621" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.570" endtime="20220701 16:41:57.621"/>
</kw>
<kw name="Alterar Privilegio do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar Privilegio do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Convert To Title Case" library="String">
<var>${administrador}</var>
<arg>${usuario['administrador']}</arg>
<doc>Converts string to title case.</doc>
<msg timestamp="20220701 16:41:57.622" level="FAIL">Resolving variable '${usuario['administrador']}' failed: TypeError: 'NoneType' object is not subscriptable</msg>
<status status="FAIL" starttime="20220701 16:41:57.621" endtime="20220701 16:41:57.622"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${administrador}</var>
<arg>${administrador}== False</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.623" endtime="20220701 16:41:57.623"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${administrador}</var>
<arg>${administrador}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.623" endtime="20220701 16:41:57.623"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${administrador}</var>
<arg>${administrador}</arg>
<doc>Converts string to lower case.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.623" endtime="20220701 16:41:57.623"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>administrador=${administrador}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20220701 16:41:57.623" endtime="20220701 16:41:57.624"/>
</kw>
<status status="FAIL" starttime="20220701 16:41:57.621" endtime="20220701 16:41:57.624"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.624" endtime="20220701 16:41:57.624"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.624" endtime="20220701 16:41:57.625"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.625" endtime="20220701 16:41:57.625"/>
</kw>
<tag>Atualizar_Privelio_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.570" endtime="20220701 16:41:57.625">Resolving variable '${usuario['administrador']}' failed: TypeError: 'NoneType' object is not subscriptable</status>
</test>
<test id="s1-s1-t17" name="Cenario: Deletar Usuario Cadastrado" line="140">
<kw name="Cadastrar Novo Usuario" library="usuarios_keywords">
<var>${usuario}</var>
<arg>"Nao Administrador"</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, loga como usuário Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Criar Dados Usuario Valido Do Tipo" library="dynamics">
<var>${usuario}</var>
<arg>${tipo}</arg>
<doc>Aceita como argumento um tipo de usuário e retorna um usuário do tipo desejado
Se não for passado um tipo de usuário, retorna um usuario Não Administrador
Tipos de usuario Aceitos:
- "Administrador"
- "Nao Administrador"</doc>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220701 16:41:57.627" level="INFO">${nome} = Jaime Burns</msg>
<status status="PASS" starttime="20220701 16:41:57.627" endtime="20220701 16:41:57.627"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220701 16:41:57.627" level="INFO">${email} = johnathan71@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.627" endtime="20220701 16:41:57.627"/>
</kw>
<kw name="Word" library="FakerLibrary">
<var>${word}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220701 16:41:57.628" level="INFO">${word} = ever</msg>
<status status="PASS" starttime="20220701 16:41:57.628" endtime="20220701 16:41:57.628"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>${word}</arg>
<arg>${email}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220701 16:41:57.628" level="INFO">${email} = everjohnathan71@example.com</msg>
<status status="PASS" starttime="20220701 16:41:57.628" endtime="20220701 16:41:57.628"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220701 16:41:57.629" level="INFO">${senha} = _mv1qVAlGQ</msg>
<status status="PASS" starttime="20220701 16:41:57.628" endtime="20220701 16:41:57.629"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${administrador}</var>
<arg>${tipo} == "Administrador"</arg>
<arg>true</arg>
<arg>false</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220701 16:41:57.629" level="INFO">${administrador} = false</msg>
<status status="PASS" starttime="20220701 16:41:57.629" endtime="20220701 16:41:57.629"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220701 16:41:57.630" level="INFO">&amp;{usuario} = { nome=Jaime Burns | email=everjohnathan71@example.com | password=_mv1qVAlGQ | administrador=false }</msg>
<status status="PASS" starttime="20220701 16:41:57.629" endtime="20220701 16:41:57.630"/>
</kw>
<msg timestamp="20220701 16:41:57.630" level="INFO">${usuario} = {'nome': 'Jaime Burns', 'email': 'everjohnathan71@example.com', 'password': '_mv1qVAlGQ', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220701 16:41:57.626" endtime="20220701 16:41:57.630"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="common" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220701 16:41:57.631" endtime="20220701 16:41:57.631"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.708" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '115', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Jaime Burns", "email": "everjohnathan71@example.com", "password": "_mv1qVAlGQ", "administrador": "false"}' 
 </msg>
<msg timestamp="20220701 16:41:57.708" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e92b58c4-9b96-4485-bcb4-3e4201006188', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "V2N8MwWtwyY88XcY"
} 
 </msg>
<msg timestamp="20220701 16:41:57.708" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.631" endtime="20220701 16:41:57.708"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.709" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.708" endtime="20220701 16:41:57.709"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.710" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'V2N8MwWtwyY88XcY'}</msg>
<status status="PASS" starttime="20220701 16:41:57.709" endtime="20220701 16:41:57.710"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.630" endtime="20220701 16:41:57.710"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.711" endtime="20220701 16:41:57.712"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.711" endtime="20220701 16:41:57.712"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.713" endtime="20220701 16:41:57.713"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.712" endtime="20220701 16:41:57.713"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220701 16:41:57.714" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220701 16:41:57.714" endtime="20220701 16:41:57.714"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220701 16:41:57.714" endtime="20220701 16:41:57.715"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${usuario_valido}</arg>
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.716" level="INFO">${usuario_valido} = {'nome': 'Jaime Burns', 'email': 'everjohnathan71@example.com', 'password': '_mv1qVAlGQ', 'administrador': 'false', '_id': 'V2N8MwWtwyY88XcY'}</msg>
<status status="PASS" starttime="20220701 16:41:57.715" endtime="20220701 16:41:57.716"/>
</kw>
<msg timestamp="20220701 16:41:57.716" level="INFO">${usuario} = None</msg>
<status status="PASS" starttime="20220701 16:41:57.626" endtime="20220701 16:41:57.716"/>
</kw>
<kw name="DELETE Endpoint &quot;/usuarios/${usuario['_id']}&quot;" library="common" sourcename="DELETE Endpoint &quot;${endpoint}&quot;">
<msg timestamp="20220701 16:41:57.717" level="FAIL">Resolving variable '${usuario['_id']}' failed: TypeError: 'NoneType' object is not subscriptable</msg>
<status status="FAIL" starttime="20220701 16:41:57.716" endtime="20220701 16:41:57.717"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.717" endtime="20220701 16:41:57.717"/>
</kw>
<kw name="Validar Mensagem &quot;Registro excluído com sucesso&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.717" endtime="20220701 16:41:57.718"/>
</kw>
<kw name="Validar Se O Usuario Foi Removido &quot;${usuario['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Se O Usuario Foi Removido &quot;${usuario['_id']}&quot;">
<status status="NOT RUN" starttime="20220701 16:41:57.718" endtime="20220701 16:41:57.718"/>
</kw>
<tag>Deletar_Usuario_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Usuarios</tag>
<tag>Usuarios</tag>
<status status="FAIL" starttime="20220701 16:41:57.625" endtime="20220701 16:41:57.718">Resolving variable '${usuario['_id']}' failed: TypeError: 'NoneType' object is not subscriptable</status>
</test>
<test id="s1-s1-t18" name="Cenario: Deletar Usuario Nao Cadastrado" line="149">
<kw name="DELETE Endpoint &quot;/usuarios/${usuario_nao_cadastrado}&quot;" library="common" sourcename="DELETE Endpoint &quot;${endpoint}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220701 16:41:57.731" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/NaoExisto 
 path_url=/usuarios/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220701 16:41:57.731" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/NaoExisto 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3dc6ce84-08b7-4c60-8d7e-2ad396a1e6c1', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Fri, 01 Jul 2022 19:41:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20220701 16:41:57.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.719" endtime="20220701 16:41:57.732"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220701 16:41:57.732" endtime="20220701 16:41:57.732"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220701 16:41:57.733" level="INFO">${response_body} = {'message': 'Nenhum registro excluído'}</msg>
<status status="PASS" starttime="20220701 16:41:57.732" endtime="20220701 16:41:57.733"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.719" endtime="20220701 16:41:57.734"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220701 16:41:57.734" endtime="20220701 16:41:57.735"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.734" endtime="20220701 16:41:57.735"/>
</kw>
<kw name="Validar Mensagem &quot;Nenhum registro excluído&quot;" library="common" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220701 16:41:57.736" endtime="20220701 16:41:57.736"/>
</kw>
<status status="PASS" starttime="20220701 16:41:57.735" endtime="20220701 16:41:57.736"/>
</kw>
<tag>Deletar_Usuario_Nao_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220701 16:41:57.718" endtime="20220701 16:41:57.737"/>
</test>
<doc>Arquivo De Testes Relacionandos Ao EndPoint Usuarios</doc>
<status status="FAIL" starttime="20220701 16:41:56.260" endtime="20220701 16:41:57.737"/>
</suite>
<status status="FAIL" starttime="20220701 16:41:56.243" endtime="20220701 16:41:57.738"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="12" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Atualizar_Dados_Usuario_Nao_Cadastrado</stat>
<stat pass="0" fail="1" skip="0">Atualizar_Email_Usuario</stat>
<stat pass="0" fail="1" skip="0">Atualizar_Nome_Usuario</stat>
<stat pass="0" fail="1" skip="0">Atualizar_Privelio_Usuario</stat>
<stat pass="0" fail="1" skip="0">Atualizar_Senha_Usuario</stat>
<stat pass="1" fail="0" skip="0">Buscar_Todos_Usuarios</stat>
<stat pass="1" fail="0" skip="0">Buscar_Usuario_Invalido</stat>
<stat pass="0" fail="1" skip="0">Buscar_Usuario_Valido_Administrador</stat>
<stat pass="0" fail="1" skip="0">Buscar_Usuario_Valido_Nao_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Administrador</stat>
<stat pass="0" fail="1" skip="0">Cadastrar_Usuario_Email_Ja_Utilizado</stat>
<stat pass="0" fail="1" skip="0">Cadastrar_Usuario_Sem_Administrador</stat>
<stat pass="0" fail="1" skip="0">Cadastrar_Usuario_Sem_Email</stat>
<stat pass="0" fail="1" skip="0">Cadastrar_Usuario_Sem_Nome</stat>
<stat pass="0" fail="1" skip="0">Cadastrar_Usuario_Sem_Senha</stat>
<stat pass="0" fail="1" skip="0">Deletar_Usuario_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Deletar_Usuario_Nao_Cadastrado</stat>
<stat pass="1" fail="1" skip="0">DELETE</stat>
<stat pass="1" fail="1" skip="0">DELETE_Usuarios</stat>
<stat pass="2" fail="2" skip="0">GET</stat>
<stat pass="2" fail="2" skip="0">GET_Usuarios</stat>
<stat pass="2" fail="5" skip="0">POST</stat>
<stat pass="2" fail="5" skip="0">POST_Usuarios</stat>
<stat pass="1" fail="4" skip="0">PUT</stat>
<stat pass="1" fail="4" skip="0">PUT_Usuarios</stat>
<stat pass="6" fail="12" skip="0">Usuarios</stat>
</tag>
<suite>
<stat pass="6" fail="12" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="6" fail="12" skip="0" id="s1-s1" name="02 Usuarios Tests">Tests.02 Usuarios Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
